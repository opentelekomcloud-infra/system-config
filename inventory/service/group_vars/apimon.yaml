apimon_image: "{{ apimon_image_stable }}"
apimon_executor_image: "{{ apimon_image }}"
apimon_scheduler_image: "{{ apimon_image }}"
apimon_epmon_image: "{{ apimon_image }}"

# Templates and filenames config
apimon_epmon_config_template: "templates/apimon/apimon.yaml.j2"
apimon_epmon_secure_config_template: "templates/apimon/apimon-secure.yaml.j2"
epmon_secure_file_location: "/etc/apimon/apimon-secure.yaml"
epmon_config_file_name: "apimon.yaml"
epmon_secure_config_file_name: "apimon-secure.yaml"

apimon_scheduler_config_template: "templates/apimon/apimon.yaml.j2"
apimon_scheduler_secure_config_template: "templates/apimon/apimon-secure.yaml.j2"
scheduler_secure_file_location: "/etc/apimon/apimon-secure.yaml"
scheduler_config_file_name: "apimon.yaml"
scheduler_secure_config_file_name: "apimon-secure.yaml"

apimon_executor_config_template: "templates/apimon/executor-config.yaml.j2"
apimon_executor_secure_config_template: "templates/apimon/executor-secure-config.yaml.j2"
executor_secure_file_location: "/etc/apimon/apimon-executor-secure.yaml"
executor_config_file_name: "apimon-executor.yaml"
executor_secure_config_file_name: "apimon-executor-secure.yaml"

# common (scheduler+epmon) secure file
apimon_secure_file_location: "/etc/apimon/apimon-secure.yaml"

cloudmon_datasource: "apimon-carbonapi"

# Main instances configuration
apimon_instances:
  production:
    statsd_host: 192.168.110.58
    gearman_host: 192.168.110.58
    zone: production_eu-de
    image: "{{ apimon_image_stable }}"

    plugins:
      - name: cloudmon-plugin-smtp
        image: "{{ cloudmon_plugin_smtp_image }}"
        init_image: "{{ cloudmon_plugin_smtp_init_image }}"
        config:
          interval: 60
          timeout: 2
          smtp_servers:
            - addr: 80.158.29.159:25
              name: mta01
            - addr: 80.158.29.232:25
              name: mta02
            - addr: 80.158.30.229:25
              name: mta03
          statsd:
            server: 192.168.110.58:8125
            prefix: cloudmon.production_eu-de.production_eu-de
      - name: cloudmon-plugin-loadbalancer
        image: "{{ cloudmon_plugin_loadbalancer_image }}"
        init_image: "{{ cloudmon_plugin_loadbalancer_init_image }}"
        config:
          interval: 5
          timeout: 2
          loadbalancers:
            - address: lb-eu-de.apimon.eco.tsi-dev.otc-service.com
              name: elbv2
              listeners:
                - port: 80
                  mode: http
                - port: 443
                  mode: https
                - port: 3333
                  mode: tcp
            - address: lb3-eu-de.apimon.eco.tsi-dev.otc-service.com
              name: elbv3
              listeners:
                - port: 80
                  mode: http
                - port: 443
                  mode: https
                - port: 3333
                  mode: tcp
          statsd:
            server: 192.168.110.58:8125
            prefix: cloudmon.production_eu-de.production_eu-de

    # Endpoint monitoring configuration
    # (inventory/service/group_vars/apimon-epmon.yaml)
    epmon_clouds:
      - production_eu-de:
         service_override: "{{ [epmon_antiddos, epmon_as, epmon_cce,
            epmon_ces, epmon_compute, epmon_cinder, epmon_css, epmon_css,
            epmon_cts, epmon_dcs, epmon_dds, epmon_deh, epmon_dis, epmon_dms,
            epmon_designate, epmon_dws, epmon_glance, epmon_keystone,
            epmon_kms, epmon_mrs, epmon_nat, epmon_network, epmon_swift,
            epmon_heat, epmon_rds, epmon_rest, epmon_sdrs, epmon_sfs,
            epmon_smn] | combine }}"
      - production_eu-nl:
         service_override: "{{ [epmon_antiddos, epmon_as, epmon_cce,
            epmon_ces, epmon_compute, epmon_cinder, epmon_css, epmon_css,
            epmon_cts, epmon_dcs, epmon_dds, epmon_deh, epmon_dis, epmon_dms,
            epmon_designate, epmon_dws, epmon_glance, epmon_keystone,
            epmon_kms_nl, epmon_mrs, epmon_nat, epmon_network, epmon_swift,
            epmon_heat, epmon_rds, epmon_rest, epmon_sdrs, epmon_sfs,
            epmon_smn] | combine }}"

    # Test projects
    test_projects:
      - name: apimon
        repo_url: https://github.com/opentelekomcloud-infra/apimon-tests
        repo_ref: master
        scenarios_location: playbooks
        exec_cmd: ansible-playbook -i inventory/production %s
      - name: csm
        repo_url: https://github.com/opentelekomcloud-infra/csm-test-scenarios
        repo_ref: main
        scenarios_location: playbooks
        exec_cmd: ansible-playbook %s

    # Test Environments
    test_environments:
      - name: production_eu-de
        env:
          OS_CLOUD: production_eu-de
          CSM_CLOUD: production_eu-de-csm
        clouds:
          - production_eu-de
      - name: production_eu-nl
        env:
          OS_CLOUD: production_eu-nl
        clouds:
          - production_eu-nl

    # Test Matrix
    test_matrix:
      - env: production_eu-de
        project: apimon
      - env: production_eu-nl
        project: apimon
        tasks:
          - scenario1_token.yaml
          - scenario3a_evs_az.yaml
          - scenario4_image.yaml
          - scenario21_as.yaml
          - scenario18_cce_info.yaml
          - scenario18a_cluster.yaml
          - scenario20_rds.yaml
          - scenario19_simple_vpc.yaml
          - scenario2_simple_ecs.yaml
          - scenario2a_ecs_az.yaml
          - scenario2c_coreos_az.yaml
          - scenario3_simple_evs.yaml
          - scenario43_dcs_instance.yaml 
          - scenario9_obs.yaml
      - env: production_eu-de
        project: csm
        tasks:
          - lb_monitoring.yaml

    # Test clouds configuration
    clouds:
      - name: production_eu-de
        cloud: otcapimon_probes11
      - name: production_eu-nl
        cloud: otcapimon_probes15
      - name: swift
        cloud: otcapimon_logs
      - name: production_eu-de-csm
        cloud: otcapimon_csm1

  production_vc:
    statsd_host: 192.168.2.60
    gearman_host: 192.168.2.60
    zone: vcloud_muc
    image: "{{ apimon_image_stable }}"

    plugins:
      - name: cloudmon-plugin-loadbalancer
        image: "{{ cloudmon_plugin_loadbalancer_image }}"
        init_image: "{{ cloudmon_plugin_loadbalancer_init_image }}"
        config:
          interval: 5
          timeout: 2
          loadbalancers:
            - address: lb-eu-de.apimon.eco.tsi-dev.otc-service.com
              name: elbv2
              listeners:
                - port: 80
                  mode: http
                - port: 443
                  mode: https
                - port: 3333
                  mode: tcp
            - address: lb3-eu-de.apimon.eco.tsi-dev.otc-service.com
              name: elbv3
              listeners:
                - port: 80
                  mode: http
                - port: 443
                  mode: https
                - port: 3333
                  mode: tcp
          statsd:
            server: 192.168.2.60:8125
            prefix: cloudmon.production_eu-de.vcloud_muc

    # Endpoint monitoring configuration
    # (inventory/service/group_vars/apimon-epmon.yaml)
    epmon_clouds:
      - production_eu-de:
         service_override: "{{ [epmon_antiddos, epmon_as, epmon_cce,
            epmon_ces, epmon_compute, epmon_cinder, epmon_css, epmon_css,
            epmon_cts, epmon_dcs, epmon_dds, epmon_deh, epmon_dis, epmon_dms,
            epmon_designate, epmon_dws, epmon_glance, epmon_keystone,
            epmon_kms, epmon_mrs, epmon_nat, epmon_network, epmon_swift,
            epmon_heat, epmon_rds, epmon_rest, epmon_sdrs, epmon_sfs,
            epmon_smn] | combine }}"
      - production_eu-nl:
         service_override: "{{ [epmon_antiddos, epmon_as, epmon_cce,
            epmon_ces, epmon_compute, epmon_cinder, epmon_css, epmon_css,
            epmon_cts, epmon_dcs, epmon_dds, epmon_deh, epmon_dis, epmon_dms,
            epmon_designate, epmon_dws, epmon_glance, epmon_keystone,
            epmon_kms_nl, epmon_mrs, epmon_nat, epmon_network, epmon_swift,
            epmon_heat, epmon_rds, epmon_rest, epmon_sdrs, epmon_sfs,
            epmon_smn] | combine }}"

    # Test projects
    test_projects:
      - name: apimon
        repo_url: https://github.com/opentelekomcloud-infra/apimon-tests
        repo_ref: master
        scenarios_location: playbooks
        exec_cmd: ansible-playbook -i inventory/production_external %s
      - name: csm
        repo_url: https://github.com/opentelekomcloud-infra/csm-test-scenarios
        repo_ref: main
        scenarios_location: playbooks
        exec_cmd: ansible-playbook %s

    # Test Environments
    test_environments:
      - name: production_eu-de
        env:
          OS_CLOUD: production_eu-de
          CSM_CLOUD: production_eu-de-csm
        clouds:
          - production_eu-de
      - name: production_eu-nl
        env:
          OS_CLOUD: production_eu-nl
        clouds:
          - production_eu-nl

    # Test Matrix
    test_matrix:
      - env: production_eu-de
        project: apimon
      - env: production_eu-nl
        project: apimon
        tasks:
          - scenario1_token.yaml
          - scenario3a_evs_az.yaml
          - scenario4_image.yaml
          - scenario21_as.yaml
          - scenario18_cce_info.yaml
          - scenario18a_cluster.yaml
          - scenario20_rds.yaml
          - scenario19_simple_vpc.yaml
          - scenario2_simple_ecs.yaml
          - scenario2a_ecs_az.yaml
          - scenario3_simple_evs.yaml
          - scenario9_obs.yaml
      - env: production_eu-de
        project: csm
        tasks:
          - lb_monitoring.yaml

    # Test clouds configuration
    clouds:
      - name: production_eu-de
        cloud: otcapimon_probes12
      - name: production_eu-nl
        cloud: otcapimon_probes16
      - name: swift
        cloud: otcapimon_logs
      - name: production_eu-de-csm
        cloud: otcapimon_csm1

  production_swiss:
    statsd_host: 192.168.195.120
    gearman_host: 192.168.195.120
    zone: swiss_bern
    image: "{{ apimon_image_stable }}"

    plugins:
      - name: cloudmon-plugin-loadbalancer
        image: "{{ cloudmon_plugin_loadbalancer_image }}"
        init_image: "{{ cloudmon_plugin_loadbalancer_init_image }}"
        config:
          interval: 5
          timeout: 2
          loadbalancers:
            - address: lb-eu-de.apimon.eco.tsi-dev.otc-service.com
              name: elbv2
              listeners:
                - port: 80
                  mode: http
                - port: 443
                  mode: https
                - port: 3333
                  mode: tcp
            - address: lb3-eu-de.apimon.eco.tsi-dev.otc-service.com
              name: elbv3
              listeners:
                - port: 80
                  mode: http
                - port: 443
                  mode: https
                - port: 3333
                  mode: tcp
          statsd:
            server: 192.168.195.120:8125
            prefix: cloudmon.production_eu-de.swiss_bern

    # Endpoint monitoring configuration
    # (inventory/service/group_vars/apimon-epmon.yaml)
    epmon_clouds:
      - production_eu-de:
         service_override: "{{ [epmon_antiddos, epmon_as, epmon_cce,
            epmon_ces, epmon_compute, epmon_cinder, epmon_css, epmon_css,
            epmon_cts, epmon_dcs, epmon_dds, epmon_deh, epmon_dis, epmon_dms,
            epmon_designate, epmon_dws, epmon_glance, epmon_keystone,
            epmon_kms, epmon_mrs, epmon_nat, epmon_network, epmon_swift,
            epmon_heat, epmon_rds, epmon_rest, epmon_sdrs, epmon_sfs,
            epmon_smn] | combine }}"
      - production_eu-nl:
         service_override: "{{ [epmon_antiddos, epmon_as, epmon_cce,
            epmon_ces, epmon_compute, epmon_cinder, epmon_css, epmon_css,
            epmon_cts, epmon_dcs, epmon_dds, epmon_deh, epmon_dis, epmon_dms,
            epmon_designate, epmon_dws, epmon_glance, epmon_keystone,
            epmon_kms_nl, epmon_mrs, epmon_nat, epmon_network, epmon_swift,
            epmon_heat, epmon_rds, epmon_rest, epmon_sdrs, epmon_sfs,
            epmon_smn] | combine }}"

    # Test projects
    test_projects:
      - name: apimon
        repo_url: https://github.com/opentelekomcloud-infra/apimon-tests
        repo_ref: master
        scenarios_location: playbooks
        exec_cmd: ansible-playbook -i inventory/production_external %s
      - name: csm
        repo_url: https://github.com/opentelekomcloud-infra/csm-test-scenarios
        repo_ref: main
        scenarios_location: playbooks
        exec_cmd: ansible-playbook %s

    # Test Environments
    test_environments:
      - name: production_eu-de
        env:
          OS_CLOUD: production_eu-de
          CSM_CLOUD: production_eu-de-csm
        clouds:
          - production_eu-de
      - name: production_eu-nl
        env:
          OS_CLOUD: production_eu-nl
        clouds:
          - production_eu-nl

    # Test Matrix
    test_matrix:
      - env: production_eu-de
        project: apimon
      - env: production_eu-nl
        project: apimon
        tasks:
          - scenario1_token.yaml
          - scenario3a_evs_az.yaml
          - scenario4_image.yaml
          - scenario21_as.yaml
          - scenario18_cce_info.yaml
          - scenario18a_cluster.yaml
          - scenario20_rds.yaml
          - scenario19_simple_vpc.yaml
          - scenario2_simple_ecs.yaml
          - scenario2a_ecs_az.yaml
          - scenario3_simple_evs.yaml
          - scenario9_obs.yaml
          - scenario43_dcs_instance.yaml 
      - env: production_eu-de
        project: csm
        tasks:
          - lb_monitoring.yaml

    # Test clouds configuration
    clouds:
      - name: production_eu-de
        cloud: otcapimon_probes12
      - name: production_eu-nl
        cloud: otcapimon_probes16
      - name: swift
        cloud: otcapimon_logs
      - name: production_eu-de-csm
        cloud: otcapimon_csm1


  preprod:
    statsd_host: 192.168.110.207
    gearman_host: 192.168.110.207
    zone: production_eu-de
    image: "{{ apimon_image_stable }}"

    epmon_clouds:
      - preprod:
          service_override: "{{ [epmon_antiddos, epmon_as, epmon_cce,
            epmon_ces, epmon_compute, epmon_cinder, epmon_css, epmon_cts,
            epmon_dcs, epmon_dcs, epmon_dds, epmon_deh, epmon_skip_dis,
            epmon_dms, epmon_designate, epmon_dws, epmon_keystone, epmon_mrs,
            epmon_nat, epmon_network, epmon_swift, epmon_heat, epmon_rds,
            epmon_rest, epmon_sdrs, epmon_sfs, epmon_skip_smn, epmon_skip_wks,
            epmon_skip_rts, epmon_skip_ief] | combine }}"

    test_projects:
      - name: apimon
        repo_url: https://github.com/opentelekomcloud-infra/apimon-tests
        repo_ref: master
        scenarios_location: playbooks
        exec_cmd: ansible-playbook -i inventory/preprod %s

    test_environments:
      - name: preprod
        env:
          OS_CLOUD: preprod
        clouds:
          - preprod

    test_matrix:
      - env: preprod
        project: apimon
        tasks:
           - scenario1_token.yaml
           - scenario2_simple_ecs.yaml
           - scenario3a_evs_az.yaml
           - scenario4_image.yaml
           - scenario30_domains.yaml
           - scenario9_obs.yaml
    clouds:
      - name: preprod
        cloud: otcapimon_preprod
      - name: swift
        cloud: otcapimon_logs

  hybrid:
    statsd_host: 192.168.110.249
    gearman_host: 192.168.110.249
    zone: production_eu-de
    image: "{{ apimon_image_stable }}"

    # Endpoint monitoring configuration
    # (inventory/service/group_vars/apimon-epmon.yaml)
    epmon_clouds:
      - hybrid_swiss:
          service_override: "{{ [epmon_as, epmon_ces, epmon_compute,
            epmon_cinder, epmon_keystone, epmon_glance, epmon_network,
            epmon_swift, epmon_sdrs, epmon_rds, epmon_smn,
            epmon_rest] | combine }}"
    # Do endpoints check once per minute only
    epmon_interval: 120

    # Test projects
    test_projects:
      - name: apimon
        repo_url: https://github.com/opentelekomcloud-infra/apimon-tests
        repo_ref: master
        scenarios_location: playbooks
        exec_cmd: ansible-playbook -i inventory/hybrid %s

    # Test Environments
    test_environments:
      - name: hybrid_swiss
        env:
          OS_CLOUD: hybrid_swiss
        clouds:
          - hybrid_swiss

    # Test Matrix
    test_matrix:
      - env: hybrid_swiss
        project: apimon
        tasks:
          - scenario1_token.yaml
          - scenario2a_ecs_az.yaml
          - scenario19_simple_vpc.yaml
          - scenario20_rds.yaml
          - scenario23_ces.yaml
          - scenario2_simple_ecs.yaml
          - scenario30_domains.yaml
          - scenario3a_evs_az.yaml
          - scenario4_image.yaml
          - scenario21_as.yaml
          - scenario3_simple_evs.yaml
          - scenario9_obs.yaml

    # Test clouds configuration
    clouds:
      - name: hybrid_swiss
        cloud: otcapimon_hybrid_swiss
      - name: swift
        cloud: otcapimon_logs

  production_stg:
    statsd_host: 127.0.0.1
    gearman_host: apimon-scheduler-stg
    zone: production_eu-de
    image: "{{ apimon_image_latest }}"

    # Endpoint monitoring configuration
    # (inventory/service/group_vars/apimon-epmon.yaml)
    epmon_clouds:
      - production_eu-de:
         service_override: "{{ [epmon_antiddos, epmon_as, epmon_cce,
            epmon_ces, epmon_compute, epmon_cinder, epmon_css, epmon_css,
            epmon_cts, epmon_dcs, epmon_dds, epmon_deh, epmon_dis, epmon_dms,
            epmon_designate, epmon_dws, epmon_glance, epmon_keystone,
            epmon_kms, epmon_mrs, epmon_nat, epmon_network, epmon_swift,
            epmon_heat, epmon_rds, epmon_rest, epmon_sdrs, epmon_sfs,
            epmon_smn] | combine }}"

    # Test projects
    test_projects:
      - name: apimon
        repo_url: https://github.com/opentelekomcloud-infra/apimon-tests
        repo_ref: devel
        scenarios_location: playbooks
        exec_cmd: ansible-playbook -i inventory/production %s
      - name: csm
        repo_url: https://github.com/opentelekomcloud-infra/csm-test-scenarios
        repo_ref: devel
        scenarios_location: playbooks
        exec_cmd: ansible-playbook %s

    # Test Environments
    test_environments:
      - name: production_eu-de
        env:
          OS_CLOUD: production_eu-de
          CSM_CLOUD: production_eu-de-csm
        clouds:
          - production_eu-de

    # Test Matrix
    test_matrix:
      - env: production_eu-de
        project: apimon
        tasks:
          #- scenario30_domains.yaml
          #- scenario31_nslookup.yaml
          - scenario23_ces.yaml

      - env: production_eu-de
        project: csm
        tasks: []
          # - lb_monitoring.yaml

    # Test clouds configuration
    clouds:
      - name: production_eu-de
        cloud: otcapimon_probes14
      - name: swift
        cloud: otcapimon_logs_stg
      - name: production_eu-de-csm
        cloud: otcapimon_csm1

apimon_k8s_instances: []
# Disabling apimon operator deployment on stg
#  - apimon_instance: "production_stg"
#    instance: "stg"
#    context: "otcinfra-stg"
#    namespace: "apimon"
#    cr_spec:
#      apimon_image: "{{ apimon_image_latest }}"
#      epmon_count: 0
#      scheduler_count: 1
#      executor_count: 1
#      apimon_image_pull_policy: "Always"

# This represents service endpoints to be tested by EPmon process
# They get combined into the epmon configuration by selecting dedicated group
# from here merging it into single dict
epmon_antiddos:
  Anti-DDoS: {}
  antiddos:
    service: anti_ddos
    urls:
      - "/"
      - "/antiddos"
      - "/antiddos/query_config_list"
      - "/antiddos/default/config"
      - "/antiddos/weekly"
epmon_as:
  as:
    service: auto_scaling
    urls:
      - "/"
      - "/scaling_group"
      - "/scaling_configuration"
      - "/scaling_policy"
  asv1: {}
epmon_cce:
  cce: {}
  ccev2.0:
    service: cce
    urls:
      - "/clusters"
epmon_ces:
  ces:
    service: ces
    urls:
      - "/"
      - "/metrics"
      - "/alarms"
  cesv1: {}
epmon_compute:
  compute:
    urls:
      - "/"
      - "/servers"
      - "/flavors"
      - "/limits"
      - "/os-keypairs"
      - "/os-server-groups"
      - "/os-availability-zone"
epmon_css:
  css:
    service: css
    urls:
      - "/"
      - "/clusters"
epmon_cts:
  cts: {}
  ctsv2:
    service: cts
    urls:
      - "/"
epmon_dcs:
  dcs:
    service: dcs
    urls:
      - "/"
      - "/instances"
      - "/quota"
  dcsv1: {}
epmon_dds:
  ddsv3:
    service: dds
    urls:
      - "/"
      - "/v3"
      - "/instances"
epmon_deh:
  deh:
    urls:
      - "/"
      - "/dedicated-hosts"
epmon_dis:
  dis: {}
  disv2:
    urls:
      - "/"
      - "/streams"
      - "/stream/tags"
epmon_skip_dis:
  dis: {}
  disv2: {}
epmon_dms:
  dms:
    service: dms
    urls:
      - "/queues"
      - "/quotas/dms"
      - "/queue/tags"
  dmsv2: {}
epmon_designate:
  dns:
    urls:
      - "/"
      - "/zones"
      - "/recordsets"
      - "/reverse/floatingips"
epmon_dws:
  dws:
    urls:
      - "/"
      - "/clusters"
      - "/snaphosts"
  dwsv1: {}
epmon_keystone:
  identity:
    urls:
      - "/"
      - "/regions"
      - "/auth/projects"
epmon_glance:
  image:
    urls:
    - "/"
    - "/images"
    - "/schemas/images"
epmon_kms:
  kms: {}
  kmsv1:
    service: kms
    urls:
      - "/"
      - "/kms/list-keys"
      - "/kms/user-quotas"
epmon_kms_nl:
  kms: {}
  kmsv1:
    urls:
      - "/"
      - "/kms/list-keys"
      - "/kms/user-quotas"
epmon_mrs:
  mrsv1:
    service: mrs
    urls:
      - "/data-sources"
      - "/cluster_infos"
      - "/job-binaries"
epmon_nat:
  nat:
    urls:
      - "/"
      - "/v2.0"
      - "/nat_gateways"
      - "/snat_rules"
      - "/dnat_rules"
epmon_network:
  network:
    urls:
      - "/"
      - "/networks"
      - "/subnets"
      - "/ports"
      - "/routers"
      - "/floatingips"
      - "/security-groups"
      - "/subnetpools"
epmon_swift:
  object: {}
  object-store:
    service: object_store
    urls:
      - "/"
      - "/info"
epmon_heat:
  orchestration:
    urls:
      - "/stacks"
      - "/build_info"
      - "/software_configs"
      - "/resource_types"
epmon_rds:
  database: {}
  rds: {}
  rdsv1:  {}
  rdsv3:
    service: rds
    urls:
      - "/"
      - "/datastores/postgresql"
      - "/instances"
      - "/configurations"
epmon_rest:
  bms: {}
  data-protect: {}
epmon_sdrs:
  sdrs:
    urls:
      - "/"
      - "/v1"
      - "/active-domains"
      - "/server-groups"
      - "/protected-instances"
      - "/replications"
epmon_sfs:
  sfsturbo:
    urls:
      - "/sfs-turbo/shares/detail"
  sharev2:
    service: share
    urls:
      - "/"
      - "/v2"
      - "/shares"
epmon_smn:
  smn:
    urls:
      - "/"
      - "/notifications"
      - "/notifications/subscriptions"
      - "/notifications/message_template"
  smnv2: {}
epmon_skip_smn:
  smn: {}
  smnv2: {}
epmon_cinder:
  volumev2: {}
  volumev3:
    service: block_storage
    urls:
    - "/volumes"
    - "/snapshots"
    - "/backups"
    - "/os-volume-transfer"
    - "/os-availability-zone"
epmon_skip_wks:
  wks: {}
  workspace: {}
epmon_skip_rts:
  orchestration: {}
epmon_skip_ief:
  ief: {}
