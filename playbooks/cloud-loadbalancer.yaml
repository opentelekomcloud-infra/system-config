---
- hosts: cloud-launcher:!disabled
  name: "Manage cloud load balancers with enhanced security"
  become: true

  tasks:
    - name: Get vault token
      ansible.builtin.set_fact:
       vault_token: "{{ lookup('community.hashi_vault.hashi_vault', 'auth/token/lookup-self') }}"
      when: "ansible_hashi_vault_token is not defined"

    - name: Set vault token
      ansible.builtin.set_fact:
        ansible_hashi_vault_token: "{{ vault_token.id }}"
        ansible_hashi_vault_auth_method: "token"
      when: "vault_token is defined"

    - name: Deploy load balancer certificates
      include_role:
        name: cloud_loadbalancer_cert
      loop: "{{ cloud_load_balancer_certificates | default([]) }}"
      loop_control:
        loop_var: "cert"
      tags: ["lb_certs"]

    - name: Deploy all load balancers with enhanced security
      include_role:
        name: cloud_loadbalancer
      loop: "{{ cloud_load_balancers | default([]) }}"
      loop_control:
        loop_var: "lb"
      tags: ["enhanced_lb"]

    - name: Log load balancer deployment summary
      ansible.builtin.debug:
        msg: |
          Load balancer deployment completed:
          - Total load balancers: {{ cloud_load_balancers | default([]) | length }}
          - All include enhanced security features from cloud-launcher.yaml
          - Features: connection limits, health monitoring, enhanced TLS, WAF protection
      tags: ["always"]

    - name: Validate load balancer health
      ansible.builtin.uri:
        url: "http://{{ item.loadbalancer.public_ip_address | default(item.loadbalancer.vip_address) }}/health"
        method: GET
        status_code: [200, 404]
        timeout: 10
      loop: "{{ cloud_load_balancers | default([]) }}"
      ignore_errors: true
      tags: ["health_check"]

