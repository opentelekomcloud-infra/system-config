## Ensure x509 certificates exists on the bridge
#- hosts: "bridge.eco.tsi-dev.otc-service.com:!disabled"
#  become: true
#  tasks:
#    - include_role:
#        name: "x509_cert"
#        tasks_from: cert.yaml
#      vars:
#        x509_common_name: "{{ host }}"
#        x509_alt_name: "IP:{{ hostvars[host].ansible_host }}"
#        x509_private_key_format: "pkcs8"
#      loop: "{{ groups['zookeeper'] }}"
#      loop_control:
#        loop_var: "host"
#
## TODO: Manage DNS
## - forward and reverse resolution should work properly so that cert verification passes
#
## Provision ZK host passing certificates from bridge
#- hosts: "zookeeper:!disabled"
#  become: true
#  name: "Base: configure zookeeper instances"
#  vars:
#    ssl_ca_path: "/etc/ssl/ca/ca.pem"
#    ssl_cert_path: "/etc/ssl/certs/{{ inventory_hostname }}.pem"
#    ssl_key_path: "/etc/ssl/keys/{{ inventory_hostname }}.pem"
#  roles:
#    # Group should be responsible for defining open ports
#    - firewalld
#    - zookeeper

# Deploy zookeeper on K8S
- hosts: "k8s-controller:!disabled"
  name: "Base: configure Zookeeper K8s deployments"
  become: true
  tasks:
    - name: Get vault token
      ansible.builtin.set_fact:
        vault_token: "{{ lookup('community.hashi_vault.hashi_vault', 'auth/token/lookup-self') }}"
      when:
        - "zookeeper_k8s_instances is defined "
        - "zookeeper_k8s_instances | length > 0"
        - "ansible_hashi_vault_token is not defined"

    - name: Set vault token
      ansible.builtin.set_fact:
        ansible_hashi_vault_token: "{{ vault_token.id }}"
        ansible_hashi_vault_auth_method: "token"
      when: "vault_token is defined"

    - include_role:
        name: "zookeeper"
        tasks_from: "k8s.yaml"
      vars:
        zookeeper: "{{ zookeeper_instances[item.zookeeper_instance] | combine(zookeeper_instances_secrets[item.zookeeper_instance], recursive=True) }}"
        instance: "{{ item.instance }}"
        context: "{{ item.context }}"
        namespace: "{{ item.namespace }}"
      loop: "{{ zookeeper_k8s_instances | list }}"
