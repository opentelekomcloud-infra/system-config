ingress:
  enabled: true
  annotations:
    "cert-manager.io/cluster-issuer" : "letsencrypt-prod"
    "kubernetes.io/ingress.class" : "nginx"
  path: /
  hosts:
    - {{ chart.opensearch_host }}
  tls:
    - secretName: opensearch-tls-secret
      hosts:
        - {{ chart.opensearch_host }}
persistence:
  storageClass: csi-disk
  size: 100Gi
  annotations:
    everest.io/disk-volume-type: sas
config:
  opensearch.yml:
    cluster.name: opensearch-cluster

    # Bind to all interfaces because we don't know what IP address Docker will assign to us.
    network.host: 0.0.0.0

    # # minimum_master_nodes need to be explicitly set when bound on a public IP
    # # set to 1 to allow single node clusters
    # discovery.zen.minimum_master_nodes: 1

    # Setting network.host to a non-loopback address enables the annoying bootstrap checks. "Single-node" mode disables them again.
    # discovery.type: single-node

    # Start OpenSearch Security Demo Configuration
    # WARNING: revise all the lines below before you go into production
    plugins:
      security:
        ssl:
          transport:
            pemcert_filepath: esnode.pem
            pemkey_filepath: esnode-key.pem
            pemtrustedcas_filepath: root-ca.pem
            enforce_hostname_verification: false
          http:
            enabled: false
            pemcert_filepath: esnode.pem
            pemkey_filepath: esnode-key.pem
            pemtrustedcas_filepath: root-ca.pem
        allow_unsafe_democertificates: true
        allow_default_init_securityindex: true
        authcz:
          admin_dn:
            - CN=kirk,OU=client,O=client,L=test, C=de
        audit.type: internal_opensearch
        enable_snapshot_restore_privilege: true
        check_snapshot_restore_write_privileges: true
        restapi:
          roles_enabled: ["all_access", "security_rest_api_access"]
        system_indices:
          enabled: true
          indices:
            [
              ".opendistro-alerting-config",
              ".opendistro-alerting-alert*",
              ".opendistro-anomaly-results*",
              ".opendistro-anomaly-detector*",
              ".opendistro-anomaly-checkpoints",
              ".opendistro-anomaly-detection-state",
              ".opendistro-reports-*",
              ".opendistro-notifications-*",
              ".opendistro-notebooks",
              ".opendistro-asynchronous-search-response*",
            ]

securityConfig:
  config:
    data:
      internal_users.yml: |-
        ---
        # This is the internal user database
        # The hash value is a bcrypt hash and can be generated with plugin/tools/hash.sh
        _meta:
          type: "internalusers"
          config_version: 2

        # Define your internal users here

        admin:
          hash: "{{ chart.opensearch_admin_hash }}"
          reserved: true
          backend_roles:
          - "admin"
          description: "Admin user"

        kibanaserver:
          hash: "{{ chart.opensearch_kibanaserver_hash }}"
          reserved: true
          description: "OpenSearch Dashboards user"

        readall:
          hash: "{{ chart.opensearch_readall_hash }}"
          reserved: false
          backend_roles:
          - "readall"
          description: "Readall user"

        writeall:
          hash: "{{ chart.opensearch_writeall_hash }}"
          reserved: false
          backend_roles:
          - "admin"
          description: "Writeall user"
