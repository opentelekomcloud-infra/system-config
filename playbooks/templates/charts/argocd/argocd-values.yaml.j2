# -- Provide a name in place of `argocd`
nameOverride: argocd

createAggregateRoles: false
createClusterRoles: true

crds:
  install: true
  keep: true

## Server
server:
  extensions:
    containerSecurityContext:
      seccompProfile:
        type: Unconfined

  containerSecurityContext:
    seccompProfile:
      type: Unconfined

  ingress:
    # -- Enable an ingress resource for the Argo CD server
    enabled: true
    # -- Additional ingress annotations
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
      kubernetes.io/tls-acme: "true"
      nginx.ingress.kubernetes.io/ssl-passthrough: "true"
      nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    # -- Additional ingress labels
    labels: {}
    # -- Defines which ingress controller will implement the resource
    ingressClassName: "nginx"

    # -- List of ingress hosts
    ## Argo Ingress.
    ## Hostnames must be provided if Ingress is enabled.
    ## Secrets must be manually created in the namespace
    hosts: 
      - argocd.eco.tsi-dev.otc-service.com

    # -- List of ingress paths
    paths:
      - /

    # -- Ingress TLS configuration
    tls: 
      - secretName: your-certificate-name
        hosts:
          - argocd.eco.tsi-dev.otc-service.com

    # -- Uses `server.service.servicePortHttps` instead `server.service.servicePortHttp`
    https: true


repoServer:
  env:
    - name: ARGOCD_GPG_ENABLED
      value: "false"
  containerSecurityContext:
    seccompProfile:
      type: Unconfined


## ApplicationSet controller
applicationSet:
  containerSecurityContext:
    seccompProfile:
      type: Unconfined
