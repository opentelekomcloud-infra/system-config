{% import 'macros.j2' as mcr %}
{% include '_annotations.yaml.j2' %}
description: Data for the compute service
editable: false
panels:
{% include '_header.yaml.j2' %}

{% include '_service_header.yaml.j2' %}

  - datasource: apimon
    fill: 1
    gridPos:
      h: 6
      w: 12
      x: 0
      y: 5
    legend:
      show: true
    lines: true
    linewidth: 1
    nullPointMode: connected
    options:
      alertThreshold: true
    renderer: flot
    spaceLength: 10
    targets:
      - refId: A
        target: groupByNode(stats.timers.apimon.metric.$environment.$zone.create_server.{default,eu*}.*.mean_90,
          7, 'avg')
    title: Instance Boot duration (Fedora33)
    type: graph
    xaxis:
      mode: time
      show: true
    yaxes:
      - format: ms
        logBase: 1
        show: true
      - format: short
        logBase: 1
        show: false
    yaxis:
      align: false
      alignLevel: null

  - cacheTimeout: null
    datasource: apimon
    description: Count of SSH Logins
    fieldConfig:
      defaults:
        color:
          mode: thresholds
        custom: {}
        mappings: []
        max: 100
        min: 0
        noValue: '0'
        thresholds:
          mode: absolute
          steps:
            - color: green
              value: null
            - color: red
              value: 100000000
    gridPos:
      h: 6
      w: 12
      x: 12
      y: 5
    options:
      orientation: auto
      reduceOptions:
        calcs:
          - lastNotNull
        fields: ''
        values: false
      showThresholdLabels: false
      showThresholdMarkers: false
      text: {}
    repeatDirection: h
    targets:
      - refId: A
        target: aliasByMetric(summarize(groupByNode(stats.counters.apimon.metric.$environment.$zone.{create_server,create_server_coreos}.{default,eu*}.passed.count,
          7, 'sum'), '1d', 'sum', false))
    title: SSH Successful Logins
    type: gauge

  - datasource: apimon
    fill: 1
    gridPos:
      h: 6
      w: 12
      x: 0
      y: 11
    legend:
      show: true
    lines: true
    linewidth: 1
    nullPointMode: connected
    options:
      alertThreshold: true
    renderer: flot
    spaceLength: 10
    targets:
      - refId: A
        target: groupByNode(stats.timers.apimon.metric.$environment.$zone.create_server_coreos.{default,eu*}.*.mean_90,
          7, 'avg')
    title: Instance Boot duration (coreos)
    type: graph
    xaxis:
      mode: time
      show: true
    yaxes:
      - format: ms
        logBase: 1
        show: true
      - format: short
        logBase: 1
        show: false

  - datasource: apimon
    fill: 1
    gridPos:
      h: 6
      w: 12
      x: 0
      y: 18
    legend:
      show: true
    lines: true
    linewidth: 1
    nullPointMode: connected
    options:
      alertThreshold: true
    renderer: flot
    spaceLength: 10
    targets:
      - refId: A
        target: aliasByNode(removeEmptySeries(stats.timers.apimon.metric.$environment.$zone.metadata.*.*.*.mean), 9, 8)
    title: Metadada Server latencies
    type: graph
    xaxis:
      mode: time
      show: true
    yaxes:
      - format: ms
        logBase: 1
        show: true
      - show: false

  - datasource: apimon
    fill: 1
    gridPos:
      h: 6
      w: 12
      x: 12
      y: 18
    legend:
      show: true
    points: true
    options:
      alertThreshold: true
    renderer: flot
    spaceLength: 10
    targets:
      - refId: A
        target: groupByNodes(stats.counters.apimon.metric.$environment.$zone.metadata.*.failed, 'sum', 7)
    title: Metadada Query failures
    type: graph
    xaxis:
      mode: time
      show: true
    yaxes:
      - show: false
      - show: false

{{ mcr.service_api_latency('compute', 40) }}
{{ mcr.service_bad_calls('compute', 41) }}
{{ mcr.service_failures(42) }}
{{ mcr.service_results(43) }}

refresh: false
style: dark
tags:
  - compute
  - apimon
templating:
  list:
{% include '_template_env.yaml.j2' %}
{% include '_template_zone.yaml.j2' %}
      multi: true

{{ mcr.service_scenarios_template(['scenario2_simple_ecs.yaml', 'scenario2a_ecs_az.yaml', 'scenario2b_ecs_s3.yaml', 'scenario2c_coreos_az.yaml']) }}

time:
  from: now-6h
  to: now
timepicker:
  refresh_intervals:
    - 10s
    - 30s
    - 1m
    - 5m
    - 15m
    - 30m
    - 1h
    - 2h
    - 1d
timezone: ''
title: Compute Service statistics
uid: APImonCompute
