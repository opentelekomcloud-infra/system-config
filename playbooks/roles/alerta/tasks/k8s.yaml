---
- name: Create {{ instance }} Namespace
  kubernetes.core.k8s:
    context: "{{ context }}"
    state: "{{ state }}"
    name: "{{ namespace }}"
    api_version: "v1"
    kind: "Namespace"

- name: Create {{ instance }} ServiceAccount
  kubernetes.core.k8s:
    context: "{{ context }}"
    state: "{{ state }}"
    namespace: "{{ namespace }}"
    name: "{{ alerta_service_account_name }}"
    api_version: "v1"
    kind: "ServiceAccount"
    apply: "yes"

- name: Create {{ instance }} SA binding
  kubernetes.core.k8s:
    context: "{{ context }}"
    state: "{{ state }}"
    namespace: "{{ namespace }}"
    name: "{{ alerta_service_account_name }}-{{ instance }}-tokenreview-binding"
    api_version: "rbac.authorization.k8s.io/v1"
    kind: "ClusterRoleBinding"
    definition:
      subjects:
        - kind: "ServiceAccount"
          name: "{{ alerta_service_account_name }}"
          namespace: "{{ namespace }}"
      roleRef:
        kind: "ClusterRole"
        name: "system:auth-delegator"
        apiGroup: "rbac.authorization.k8s.io"

- name: Create {{ instance }} ConfigMap
  kubernetes.core.k8s:
    context: "{{ context }}"
    state: "{{ state }}"
    namespace: "{{ namespace }}"
    name: "{{ alerta_config_name }}"
    api_version: "v1"
    kind: "ConfigMap"
    apply: "yes"
    definition:
      metadata:
        labels:
          app.kubernetes.io/name: "alerta"
          app.kubernetes.io/instance: "{{ instance }}"
          app.kubernetes.io/managed-by: "system-config"
      data:
        alertad.conf.hcl: "{{ lookup('template', 'alertad.conf.hcl.j2') }}"
        alerta.conf.hcl: "{{ lookup('template', 'alerta.conf.hcl.j2') }}"
        vault-agent-config.hcl: "{{ lookup('template', 'vault-agent-config.hcl.j2') }}"

- name: Create {{ instance }} TLS Certs Secret
  kubernetes.core.k8s:
    context: "{{ context }}"
    state: "{{ state }}"
    namespace: "{{ namespace }}"
    name: "{{ alerta_ssl_cert_name }}"
    api_version: "v1"
    kind: "Secret"
    definition:
      metadata:
        labels:
          app.kubernetes.io/name: "alerta"
          app.kubernetes.io/instance: "{{ instance }}"
          app.kubernetes.io/managed-by: "system-config"
      type: "kubernetes.io/tls"
      data:
        tls.crt: "{{ lookup('file', '/etc/ssl/{{ inventory_hostname }}/{{ alerta.alerta_cert }}-fullchain.crt') | string | b64encode }}"
        tls.key: "{{ lookup('file', '/etc/ssl/{{ inventory_hostname }}/{{ alerta.alerta_cert }}.pem') | string | b64encode }}"
  when: "alerta.alerta_cert is defined"

- name: Start {{ instance }} Alerta deployment 
  kubernetes.core.k8s:
    context: "{{ context }}"
    state: "{{ state }}"
    namespace: "{{ namespace }}"
    name: "{{ alerta_deployment_name }}"
    apply: "yes"
    definition: "{{ lookup('template', 'alerta-deployment.yaml.j2') | from_yaml }}"

- name: Expose {{ instance }} Alerta deployment with service
  kubernetes.core.k8s:
    context: "{{ context }}"
    state: "{{ state }}"
    namespace: "{{ namespace }}"
    name: "{{ alerta_service_name }}"
    apply: "yes"
    definition: "{{ lookup('template', 'alerta-service.yaml.j2') | from_yaml }}"

- name: Start {{ instance }} Alerta ingress
  kubernetes.core.k8s:
    context: "{{ context }}"
    state: "{{ state }}"
    namespace: "{{ namespace }}"
    name: "{{ alerta_ingress_name }}"
    apply: "yes"
    definition: "{{ lookup('template', 'alerta-ingress.yaml.j2') | from_yaml }}"
