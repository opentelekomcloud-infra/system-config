---
- name: Create {{ instance }} Namespace
  community.kubernetes.k8s:
    context: "{{ context }}"
    state: "{{ state }}"
    name: "{{ namespace }}"
    api_version: "v1"
    kind: "Namespace"

- name: Create {{ instance }} ConfigMap
  community.kubernetes.k8s:
    context: "{{ context }}"
    state: "{{ state }}"
    namespace: "{{ namespace }}"
    name: "{{ alerta_config_name }}"
    api_version: "v1"
    kind: "ConfigMap"
    apply: "yes"
    definition:
      metadata:
        labels:
          app.kubernetes.io/name: "alerta"
          app.kubernetes.io/instance: "{{ instance }}"
          app.kubernetes.io/managed-by: "system-config"
      data:
        alertad.conf: "{{ lookup('template', 'templates/alerta/alertad.conf.j2') }}"

- name: Create  {{ instance }} Secrets
  community.kubernetes.k8s:
    context: "{{ context }}"
    state: "{{ state }}"
    namespace: "{{ namespace }}"
    name: "{{ alerta_secret_name }}"
    api_version: "v1"
    kind: "Secret"
    apply: "yes"
    definition:
      metadata:
        labels:
          app.kubernetes.io/name: "alerta"
          app.kubernetes.io/instance: "{{ instance }}"
          app.kubernetes.io/managed-by: "system-config"
      data:
        DATABASE_URL: "{{ alerta.alerta_db_url | string | b64encode }}"
        SECRET_KEY: "{{ alerta.alerta_secret_key | string | b64encode }}"
        ZULIP_API_KEY: "{{ alerta.alerta_zulip_api_key | string | b64encode }}"
        ADMIN_KEY: "{{ alerta.alerta_admin_key | string | b64encode }}"
        ALERTA_API_KEY: "{{ alerta.alerta_api_key | string | b64encode }}"
        ADMIN_USERS: "{{ alerta.alerta_admin_users | string | b64encode }}"
        LDAP_BIND_PASSWORD: "{{ alerta.alerta_bind_password | string | b64encode }}"

- name: Create {{ instance }} TLS Certs Secret
  community.kubernetes.k8s:
    context: "{{ context }}"
    state: "{{ state }}"
    namespace: "{{ namespace }}"
    name: "{{ alerta_ssl_cert_name }}"
    api_version: "v1"
    kind: "Secret"
    definition:
      metadata:
        labels:
          app.kubernetes.io/name: "alerta"
          app.kubernetes.io/instance: "{{ instance }}"
          app.kubernetes.io/managed-by: "system-config"
      type: "kubernetes.io/tls"
      data:
        tls.crt: "{{ lookup('file', '/etc/ssl/{{ inventory_hostname }}/{{ alerta.alerta_cert }}-fullchain.crt') | string | b64encode }}"
        tls.key: "{{ lookup('file', '/etc/ssl/{{ inventory_hostname }}/{{ alerta.alerta_cert }}.pem') | string | b64encode }}"
  when: "alerta.alerta_cert is defined"

- name: Start {{ instance }} Alerta deployment 
  community.kubernetes.k8s:
    context: "{{ context }}"
    state: "{{ state }}"
    namespace: "{{ namespace }}"
    name: "{{ alerta_deployment_name }}"
    apply: "yes"
    definition: "{{ lookup('template', 'alerta-deployment.yaml.j2') | from_yaml }}"

- name: Expose {{ instance }} Alerta deployment with service
  community.kubernetes.k8s:
    context: "{{ context }}"
    state: "{{ state }}"
    namespace: "{{ namespace }}"
    name: "{{ alerta_service_name }}"
    apply: "yes"
    definition: "{{ lookup('template', 'alerta-service.yaml.j2') | from_yaml }}"

- name: Start {{ instance }} Alerta ingress
  community.kubernetes.k8s:
    context: "{{ context }}"
    state: "{{ state }}"
    namespace: "{{ namespace }}"
    name: "{{ alerta_ingress_name }}"
    apply: "yes"
    definition: "{{ lookup('template', 'alerta-ingress.yaml.j2') | from_yaml }}"
