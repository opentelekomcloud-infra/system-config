apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: "alerta"
    app.kubernetes.io/instance: "{{ instance }}"
    app.kubernetes.io/managed-by: "system-config"
spec:
  replicas: {{ alerta.alerta_deployment_count |int }}
  selector:
    matchLabels:
      app.kubernetes.io/name: "alerta"
      app.kubernetes.io/instance: "{{ instance }}"
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/name: "alerta"
        app.kubernetes.io/instance: "{{ instance }}"
    spec:
      hostAliases:
      - ip: "{{ alerta.alerta_ldap_server_ip }}"
        hostnames:
        - "ldap.otc-service.internal"
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: "app.kubernetes.io/instance"
                  operator: In
                  values:
                  - "{{ instance }}"
                - key: "app.kubernetes.io/name"
                  operator: In
                  values:
                  - "alerta"
              topologyKey: kubernetes.io/hostname
      serviceAccountName: "{{ alerta_service_account_name }}"
      initContainers:
        - args:
            - agent
            - -config=/etc/vault/vault-agent-config.hcl
            - -log-level=debug
            - -exit-after-auth=true
          env:
            - name: "VAULT_ADDR"
              value: "{{ ansible_hashi_vault_addr }}"
{% if alerta.vault_skip_setcap is defined and alerta.vault_skip_setcap %}
            - name: "SKIP_SETCAP"
              value: "true"
{% endif %}
          image: "{{ alerta.vault_image }}"
          name: "vault-agent"
          resources: {{ alerta_vault_agent_resources }}
          volumeMounts:
            - mountPath: "/etc/vault"
              name: "vault-agent-config"
            - mountPath: /var/run/secrets/tokens
              name: k8-tokens
            - mountPath: "/vault-data"
              name: "vault-data"
            - mountPath: "/vault-data/template"
              name: alerta-config-template
      containers:
      - args:
          - agent
          - -config=/etc/vault/vault-agent-config.hcl
          - -log-level=debug
          - -exit-after-auth=false
        env:
          - name: "VAULT_ADDR"
            value: "{{ ansible_hashi_vault_addr }}"
{% if alerta.vault_skip_setcap is defined and alerta.vault_skip_setcap %}
          - name: "SKIP_SETCAP"
            value: "true"
{% endif %}
        image: "{{ alerta.vault_image }}"
        name: "vault-agent-sidecar"
        resources: {{ alerta_vault_agent_resources }}
        volumeMounts:
          - mountPath: "/etc/vault"
            name: "vault-agent-config"
          - mountPath: /var/run/secrets/tokens
            name: k8-tokens
          - mountPath: "/vault-data"
            name: "vault-data"
          - mountPath: "/vault-data/template"
            name: alerta-config-template
      - image: "{{ alerta.alerta_image }}"
        env:
        - name: ALERTA_CONF_FILE
          value: /vault-data/alerta.conf
        - name: ALERTA_SVR_CONF_FILE
          value: /vault-data/alertad.conf
        name: alerta
        ports:
        - containerPort: 8080
{% if alerta.alerta_deployment_resources is defined %}
        resources:
{% for key, value in alerta.alerta_deployment_resources.items() %}
          {{ key }}:
{% for key2, value2 in value.items() %}
            {{ key2 }}: {{ value2 }}
{% endfor %}
{% endfor %}
{% endif %}
        readinessProbe:
          httpGet:
            path: /login
            scheme: HTTP
            port: 8080
        livenessProbe:
          httpGet:
            path: /login
            scheme: HTTP
            port: 8080
        volumeMounts:
        - mountPath: "/vault-data"
          name: "vault-data"
        - mountPath: "/vault-data/template"
          name: alerta-config-template
      volumes:
      - configMap:
          name: "{{ alerta_config_name }}"
          items:
            - key: vault-agent-config.hcl
              path: vault-agent-config.hcl
        name: vault-agent-config
      - name: k8-tokens
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 7200
              path: vault-token
      - configMap:
          name: "{{ alerta_config_name }}"
          items:
            - key: alertad.conf.hcl
              path: alertad.conf.hcl
            - key: alerta.conf.hcl
              path: alerta.conf.hcl
        name: alerta-config-template
      - emptyDir: {}
        name: vault-data
status: {}
