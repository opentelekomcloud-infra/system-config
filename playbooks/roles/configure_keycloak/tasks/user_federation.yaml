- name: Check if user federation {{ user_federation.name }} exists
  ansible.builtin.uri:
    url: "{{ url }}/admin/realms/{{ user_federation.realm }}/components?name={{ user_federation.name }}"
    method: GET
    headers:
      Authorization: "bearer {{ token }}"
    status_code: [ 404, 200 ]
  register: component

- name: Add  user federation {{ user_federation.name }} if it does not exist
  community.general.keycloak_user_federation:
    state: "present"
    auth_client_id: "admin-cli"
    auth_keycloak_url: "{{ url }}"
    token: "{{ token }}"
    realm: "{{ user_federation.realm }}"
    name: "{{ user_federation.name }}"
    provider_id: "{{ user_federation.provider_id }}"
    provider_type: "{{ user_federation.provider_type }}"
    config: "{{ user_federation.config }}"
    mappers: "{{ user_federation.mappers | default(omit) }}"
  when: "component.json[0].config is not defined"

- name: Get created user federation {{ user_federation.name }} params
  ansible.builtin.uri:
    url: "{{ url }}/admin/realms/{{ user_federation.realm }}/components?name={{ user_federation.name }}"
    method: GET
    headers:
      Authorization: "bearer {{ token }}"
    status_code: [ 200 ]
  register: component_created
  when: "component.json[0].config is not defined"

- name: Initiate a full sync of users {{ user_federation.name }}
  ansible.builtin.uri:
    url: "{{ url }}/admin/realms/{{ user_federation.realm }}/user-storage/{{  component_created.json[0].id }}/sync?action=triggerFullSync"
    method: POST
    headers:
      Authorization: "bearer {{ token }}"
    status_code: [ 200 ]
  when: "component_created.json[0].id is defined"
