---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "zookeeper"
  namespace: "{{ namespace }}"
  app: "zookeeper"
  component: "server"
  labels:
    app.kubernetes.io/name: "zookeeper"
    app.kubernetes.io/instance: "{{ instance }}"
    app.kubernetes.io/managed-by: "system-config"
spec:
  selector:
    matchLabels:
      app: "zookeeper"
      component: "server"
  serviceName: "{{ zookeeper_headless_svc_name }}"
  replicas: 3
  podManagementPolicy: "Parallel"
  updateStrategy:
    type: "RollingUpdate"
  template:
    metadata:
      labels:
        app: "zookeeper"
        component: "server"
      annotations:
        serverCertValidity: "{{ server_cert_info.not_after }}"
    spec:
      terminationGracePeriodSeconds: 1800
      serviceAccountName: "{{ zookeeper_service_account }}"
      initContainers:
        - args:
            - agent
            - -config=/etc/vault/vault-agent-config.hcl
            - -log-level=debug
            - -exit-after-auth=true
          env:
            - name: "VAULT_ADDR"
              value: "{{ ansible_hashi_vault_addr }}"
          image: "{{ vault_image }}"
          name: "vault-agent"
          volumeMounts:
            - mountPath: "/etc/vault"
              name: "vault-agent-config"
            - mountPath: "/tls"
              name: "cert-data"
            - mountPath: /var/run/secrets/tokens
              name: k8-tokens

      containers:
        - args:
            - agent
            - -config=/etc/vault/vault-agent-config.hcl
            - -log-level=debug
            - -exit-after-auth=false
          env:
            - name: "VAULT_ADDR"
              value: "{{ ansible_hashi_vault_addr }}"
          image: "{{ vault_image }}"
          name: "vault-agent-sidecar"
          volumeMounts:
            - mountPath: "/etc/vault"
              name: "vault-agent-config"
            - mountPath: "/tls"
              name: "cert-data"
            - mountPath: /var/run/secrets/tokens
              name: k8-tokens

        - name: "zookeeper"
          securityContext:
            fsGroup: 1000
            runAsUser: 1000
          image: "{{ zookeeper_image }}"
          command:
            - "/bin/bash"
            - "-xec"
            - "/config-scripts/run"
          ports:
            - containerPort: 2281
              name: "client"
            - containerPort: 2888
              name: "server"
            - containerPort: 3888
              name: "election"
          livenessProbe:
            exec:
              command:
                - sh
                - /config-scripts/ok
            initialDelaySeconds: 20
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 2
            successThreshold: 1
          readinessProbe:
            exec:
              command:
                - sh
                - /config-scripts/ready
            initialDelaySeconds: 20
            periodSeconds: 30
            timeoutSeconds: 5
            failureThreshold: 2
            successThreshold: 1
          env:
            - name: "ZK_REPLICAS"
              value: "3"
            - name: JMXAUTH
              value: "false"
            - name: JMXDISABLE
              value: "false"
            - name: JMXPORT
              value: "1099"
            - name: JMXSSL
              value: "false"
            - name: ZK_SYNC_LIMIT
              value: "10"
            - name: ZK_TICK_TIME
              value: "2000"
            - name: ZK_PURGE_INTERVAL
              value: "{{ zookeeper.autopurge_interval | default(0) }}"
            - name: ZK_SNAP_RETAIN_COUNT
              value: "3"
            - name: ZOO_INIT_LIMIT
              value: "5"
            - name: ZOO_MAX_CLIENT_CNXNS
              value: "60"
            - name: ZOO_PORT
              value: "2181"
            - name: ZOO_STANDALONE_ENABLED
              value: "false"
            - name: ZOO_TICK_TIME
              value: "2000"
          volumeMounts:
            - name: datadir
              mountPath: /data
            - name: cert-data
              mountPath: /tls
            - name: zookeeper-config
              mountPath: /config-scripts

      volumes:
        - name: vault-agent-config
          configMap:
            items:
              - key: vault-agent-config.hcl
                path: vault-agent-config.hcl
            name: zookeeper-config
        - name: zookeeper-config
          configMap:
            name: zookeeper-config
            defaultMode: 0555
        - emptyDir: {}
          name: cert-data
        - name: k8-tokens
          projected:
            defaultMode: 420
            sources:
            - serviceAccountToken:
                expirationSeconds: 7200
                path: vault-token
  volumeClaimTemplates:
    - metadata:
        name: datadir
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: "{{ zookeeper_pvc_scn | default('csi-disk') }}"
        resources:
          requests:
            storage: "{{ zookeeper_pvc_size | default('1Gi') }}"
