---
- include_role:
    name: "x509_vault"
    tasks_from: cert.yaml
    apply:
      tags: ["config"]
  vars:
    vault_pki_path: "{{ zookeeper.vault_pki_path }}"
    vault_pki_role: "{{ zookeeper.vault_pki_role }}"
    vault_secret_path: "{{ zj_cert_item.vault_secret_path }}"
    common_name: "{{ zj_cert_item.common_name }}"
    alt_names: "{{ zj_cert_item.alt_names | default(omit) }}"
    private_key_format: "{{ zj_cert_item.private_key_format }}"
  tags: ["config"]
  loop:
    - vault_secret_path: "{{ zookeeper.vault_server_cert_path }}"
      common_name: "server.{{ namespace }}.svc.cluster.local"
      alt_names:
        - "zookeeper-0.{{ zookeeper_headless_svc_name }}.{{ namespace }}.svc.cluster.local"
        - "zookeeper-1.{{ zookeeper_headless_svc_name }}.{{ namespace }}.svc.cluster.local"
        - "zookeeper-2.{{ zookeeper_headless_svc_name }}.{{ namespace }}.svc.cluster.local"
        - "zookeeper-3.{{ zookeeper_headless_svc_name }}.{{ namespace }}.svc.cluster.local"
        - "zookeeper-4.{{ zookeeper_headless_svc_name }}.{{ namespace }}.svc.cluster.local"
      private_key_format: "pkcs8"
    - vault_secret_path: "{{ zookeeper.vault_client_cert_path }}"
      common_name: "client.{{ namespace }}.svc.cluster.local"
      private_key_format: "pkcs8"
  loop_control:
    loop_var: zj_cert_item

- name: Check server certificate in Vault
  community.hashi_vault.vault_read:
    url: "{{ ansible_hashi_vault_addr }}"
    token: "{{ ansible_hashi_vault_token }}"
    path: "{{ zookeeper.vault_server_cert_path }}"
  register: server_cert_in_vault

- name: Check server certificate validity
  community.crypto.x509_certificate_info:
    content: "{{ server_cert_in_vault.data.data.data.certificate }}"
  register: server_cert_info
  when: "server_cert_in_vault.data is defined"

- name: Create {{ namespace }} Namespace
  community.kubernetes.k8s:
    context: "{{ context }}"
    state: "present"
    name: "{{ namespace }}"
    api_version: "v1"
    kind: "Namespace"

- name: Manage Zookeeper ServiceAccount
  community.kubernetes.k8s:
    context: "{{ context }}"
    state: "present"
    namespace: "{{ namespace }}"
    name: "{{ zookeeper_service_account }}"
    api_version: "v1"
    kind: "ServiceAccount"
    apply: "yes"

- name: Manage Zookeeper ServiceAccount RoleBinding
  community.kubernetes.k8s:
    context: "{{ context }}"
    state: "present"
    namespace: "{{ namespace }}"
    name: "{{ zookeeper_service_account }}-{{ instance }}-tokenreview-binding"
    api_version: "rbac.authorization.k8s.io/v1"
    kind: "ClusterRoleBinding"
    apply: "yes"
    definition:
      roleRef:
        apiGroup: "rbac.authorization.k8s.io"
        kind: "ClusterRole"
        name: "system:auth-delegator"
      subjects:
      - kind: "ServiceAccount"
        name: "{{ zookeeper_service_account }}"
        namespace: "{{ namespace }}"

- name: Manage configuration
  community.kubernetes.k8s:
    context: "{{ context }}"
    state: "present"
    apply: "yes"
    definition: "{{ lookup('template', 'k8s_config.yaml.j2') | from_yaml }}"

- name: Manage headless service
  community.kubernetes.k8s:
    context: "{{ context }}"
    state: present
    name: "{{ zookeeper_headless_svc_name }}"
    namespace: "{{ namespace }}"
    api_version: v1
    kind: Service
    apply: "yes"
    definition:
      spec:
        # Not exposing in the cluster
        clusterIP: None
        # Important to start up
        publishNotReadyAddresses: true
        selector:
          app.kubernetes.io/name: "zookeeper"
          app.kubernetes.io/instance: "{{ instance }}"
        ports:
          - port: 2281
            name: client
            targetPort: client
            protocol: TCP
          - port: 2888
            name: server
            targetPort: server
            protocol: TCP
          - port: 3888
            name: election
            targetPort: election
            protocol: TCP

- name: Manage public service
  community.kubernetes.k8s:
    context: "{{ context }}"
    state: present
    name: "zookeeper"
    namespace: "{{ namespace }}"
    api_version: v1
    kind: Service
    apply: "yes"
    definition:
      spec:
        type: ClusterIP
        ports:
          - port: 2281
            name: client
            targetPort: client
            protocol: TCP
        selector:
          app.kubernetes.io/name: "zookeeper"
          app.kubernetes.io/instance: "{{ instance }}"

- name: Manage PodDisruptionBudget
  community.kubernetes.k8s:
    context: "{{ context }}"
    state: present
    name: "zookeeper-pdb"
    namespace: "{{ namespace }}"
    api_version: policy/v1beta1
    kind: PodDisruptionBudget
    apply: "yes"
    definition:
      spec:
        selector:
          matchLabels:
            app.kubernetes.io/name: "zookeeper"
            app.kubernetes.io/instance: "{{ instance }}"
        maxUnavailable: 1

- name: Set vault version from instance vars
  ansible.builtin.set_fact:
    vault_image: "{{ zookeeper.vault_image }}"
  when: "zookeeper.vault_image is defined"

- name: Manage StatefulSet
  community.kubernetes.k8s:
    context: "{{ context }}"
    state: "present"
    name: "zookeeper"
    namespace: "{{ namespace }}"
    apply: "yes"
    definition: "{{ lookup('template', 'statefulset.yaml.j2') | from_yaml }}"
