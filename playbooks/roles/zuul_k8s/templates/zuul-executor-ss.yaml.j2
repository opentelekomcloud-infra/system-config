metadata:
  labels:
    app.kubernetes.io/app: "zuul"
    app.kubernetes.io/component: "zuul-executor"
    app.kubernetes.io/instance: "{{ instance }}"
    app.kubernetes.io/managed-by: "system-config"
spec:
  replicas: {{ zuul.zuul_executor_instances_count | default(2) | int }}
  selector:
    matchLabels:
      app.kubernetes.io/app: "zuul"
      app.kubernetes.io/component: "zuul-executor"
      app.kubernetes.io/instance: "{{ instance }}"
  serviceName: "zuul-executor-{{ instance }}"
  template:
    metadata:
      labels:
        app.kubernetes.io/app: "zuul"
        app.kubernetes.io/component: "zuul-executor"
        app.kubernetes.io/instance: "{{ instance }}"
      annotations:
        vaultConfVersion: "{{ zuul_vault_cm_version | default(omit) }}"
        zkClientCertValidity: "{{ zk_client_cert_info.not_after }}"
    spec:
      serviceAccountName: "{{ zuul_service_account_name }}"

{% if zuul.additional_hosts is defined and zuul.additional_hosts|length > 0 %}
      hostAliases:
{% for host in zuul.additional_hosts %}
          - ip: "{{ host.ip }}"
            hostnames: {{ host.names }}
{% endfor %}
{% endif %}

      initContainers:
        - name: "vault-agent"
          command:
            - "sh"
            - "-c"
            - "vault agent -config=/etc/vault/vault-agent-config-zuul-executor.hcl -exit-after-auth=true && mkdir -p /etc/zuul && cp -ruvT /secrets/zuul /etc/zuul"
          env:
            - name: "VAULT_ADDR"
              value: "{{ ansible_hashi_vault_addr }}"
          image: "{{ zuul.vault_image }}"
          resources: {{ zuul_vault_agent_resources }}
          volumeMounts:
            - mountPath: "/etc/vault"
              name: "vault-agent-config"
            - mountPath: "/secrets"
              name: "secrets"
            - mountPath: "/var/run/secrets/tokens"
              name: "k8-tokens"
              readOnly: true

#         - name: "manage-ansible"
#           image: "quay.io/opentelekomcloud/zuul-executor:{{ zuul.zuul_version_tag }}"
#           command:
#             - "sh"
#             - "-c"
#             - "mkdir /var/lib/zuul/managed_ansible && /usr/local/bin/zuul-manage-ansible -r /var/lib/zuul/managed_ansible -v"
#           securityContext:
#             runAsUser: 10001
#             runAsGroup: 10001
#             privileged: true
#           env:
#             - name: "ANSIBLE_29_EXTRA_PACKAGES"
#               value: "hvac"
#             - name: "ANSIBLE_5_EXTRA_PACKAGES"
#               value: "hvac"
#           resources: {{ zuul_executor_resources }}
#           terminationGracePeriodSeconds: 60
#           volumeMounts:
#             - name: "zuul-config"
#               mountPath: "/etc/zuul"
#               readOnly: true
#             - name: "zuul-data-volume"
#               mountPath: "/var/lib/zuul"

      containers:
        # Vault agent produces files as vault user. We need to ensure
        # those have correct ownership and privs, therefore permanently
        # try to copy/fix what vault produces
        - name: "conf-priv-fixer"
          image: "busybox:1.34.1-musl"
          command:
            - "sh"
            - "-c"
            - "while :; do cp -v /secrets/tls/* /tls/; cp -ruvT /secrets/zuul /etc/zuul; chown -R 10001:10001 /etc/zuul /tls; sleep 60; done"
          resources: {{ zuul_vault_priv_fixer_resources }}
          volumeMounts:
            - name: "cert-data"
              mountPath: "/tls"
            - name: "zuul-config"
              mountPath: "/etc/zuul"
            - name: "secrets"
              mountPath: "/secrets"

        - name: "zuul-executor"
          image: "quay.io/opentelekomcloud/zuul-executor:{{ zuul.zuul_version_tag }}"
          args:
            - "/usr/local/bin/zuul-executor"
            - "-f"
            - "-d"
          securityContext:
            # runAsUser: 10001
            # runAsGroup: 10001
            privileged: true
          lifecycle:
            preStop:
              exec:
                command: [
                  "/usr/local/bin/zuul-executor", "graceful"
                ]
          ports:
            - containerPort: 7900
              protocol: "TCP"
          resources: {{ zuul_executor_resources }}
          terminationGracePeriodSeconds: 60
          volumeMounts:
            - name: "cert-data"
              mountPath: "/tls"
            - name: "zuul-config"
              mountPath: "/etc/zuul"
              readOnly: true
            - name: "zuul-data-volume"
              mountPath: "/var/lib/zuul"
            - name: "zuul-var-run"
              mountPath: "/var/run/zuul"
            - name: "zuul-vars"
              mountPath: "/var/run/zuul/vars"
            - name: "zuul-trusted-ro"
              mountPath: "/var/run/zuul/trusted-ro"
              readOnly: true

        - name: "vault-agent-sidecar"
          command:
            - "sh"
            - "-c"
            - "vault agent -config=/etc/vault/vault-agent-config-zuul-executor.hcl"
          env:
            - name: "VAULT_ADDR"
              value: "{{ ansible_hashi_vault_addr }}"
          image: "{{ zuul.vault_image }}"
          resources: {{ zuul_vault_agent_resources }}
          volumeMounts:
            - mountPath: "/etc/vault"
              name: "vault-agent-config"
            - mountPath: "/secrets"
              name: "secrets"
            - mountPath: "/var/run/zuul/trusted-ro"
              # since we want to populate it - no readonly
              name: "zuul-trusted-ro"
            - mountPath: "/var/run/secrets/tokens"
              name: "k8-tokens"
              readOnly: true

        - name: "zuul-base-vault-agent"
          command:
            - "sh"
            - "-c"
            - "vault agent -config=/etc/vault/vault-agent-config-zuul-executor-base.hcl"
          env:
            - name: "VAULT_ADDR"
              value: "{{ ansible_hashi_vault_addr }}"
          image: "{{ zuul.vault_image }}"
          volumeMounts:
            - mountPath: "/etc/vault"
              name: "vault-agent-config"
            - mountPath: "/var/run/zuul/trusted-ro"
              # since we want to populate it - no readonly
              name: "zuul-trusted-ro"
            - mountPath: "/var/run/secrets/tokens"
              name: "k8-tokens"
              readOnly: true
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: "app.kubernetes.io/instance"
                  operator: In
                  values:
                  - "{{ instance }}"
                - key: "app.kubernetes.io/app"
                  operator: In
                  values:
                  - "zuul"
                - key: "app.kubernetes.io/component"
                  operator: In
                  values:
                  - "zuul-executor"
              topologyKey: kubernetes.io/hostname
      volumes:
        - name: "vault-agent-config"
          configMap:
            name: "vault-agent-config-{{ instance }}"
        - name: "zuul-vars"
          configMap:
            name: "zuul-executor-vars-{{ instance }}"
        - name: "zuul-data-volume"
          emptyDir: {}
        - name: "zuul-var-run"
          emptyDir: {}
        - name: "zuul-trusted-ro"
          emptyDir: {}
        - name: "cert-data"
          emptyDir: {}
        - name: "zuul-config"
          emptyDir: {}
        - name: "secrets"
          emptyDir: {}
        - name: "k8-tokens"
          projected:
            defaultMode: 420
            sources:
              - serviceAccountToken:
                  expirationSeconds: 7200
                  path: "vault-token"
