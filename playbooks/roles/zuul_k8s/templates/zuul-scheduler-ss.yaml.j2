metadata:
  labels:
    app.kubernetes.io/app: "zuul"
    app.kubernetes.io/component: "zuul-scheduler"
    app.kubernetes.io/instance: "{{ instance }}"
    app.kubernetes.io/managed-by: "system-config"
spec:
  replicas: {{ zuul.zuul_scheduler_instances_count | default(1) | int }}
  selector:
    matchLabels:
      app.kubernetes.io/app: "zuul"
      app.kubernetes.io/component: "zuul-scheduler"
      app.kubernetes.io/instance: "{{ instance }}"
  serviceName: "zuul-scheduler-{{ instance }}"
  template:
    metadata:
      labels:
        app.kubernetes.io/app: "zuul"
        app.kubernetes.io/component: "zuul-scheduler"
        app.kubernetes.io/instance: "{{ instance }}"
      annotations:
        vaultConfVersion: "{{ zuul_vault_cm_version | default(omit) }}"
        zkClientCertValidity: "{{ zk_client_cert_info.not_after }}"
    spec:
      serviceAccountName: "{{ zuul_service_account_name }}"

{% if zuul.additional_hosts is defined and zuul.additional_hosts|length > 0 %}
      hostAliases:
{% for host in zuul.additional_hosts %}
          - ip: "{{ host.ip }}"
            hostnames: {{ host.names }}
{% endfor %}
{% endif %}

      initContainers:
        - name: "vault-agent"
          command:
            - "sh"
            - "-c"
            - "vault agent -config=/etc/vault/vault-agent-config-zuul-scheduler.hcl -exit-after-auth=true && mkdir -p /etc/zuul && cp -ruvT /secrets/zuul /etc/zuul"
          env:
            - name: "VAULT_ADDR"
              value: "{{ ansible_hashi_vault_addr }}"
          image: "{{ zuul.vault_image }}"
          resources: {{ zuul_vault_agent_resources }}
          volumeMounts:
            - mountPath: "/etc/vault"
              name: "vault-agent-config"
            - mountPath: "/secrets"
              name: "secrets"

            - mountPath: "/var/run/secrets/tokens"
              name: "k8-tokens"
              readOnly: true

      containers:
        # Vault agent produces files as vault user. We need to ensure
        # those have correct ownership and privs, therefore permanently
        # try to copy/fix  what vault produces
        - name: "conf-priv-fixer"
          image: "busybox:1.34.1-musl"
          command:
            - "sh"
            - "-c"
            - "while :; do cp -v /secrets/tls/* /tls/; cp -ruvT /secrets/zuul /etc/zuul; chown -R 10001:10001 /etc/zuul /tls; sleep 60; done"
          resources: {{ zuul_vault_priv_fixer_resources }}
          volumeMounts:
            - name: "cert-data"
              mountPath: "/tls"
            - name: "zuul-config"
              mountPath: "/etc/zuul"
            - name: "secrets"
              mountPath: "/secrets"

        - name: "zuul-scheduler"
          command:
            - "/usr/local/bin/zuul-scheduler"
            - "-f"
          resources: {{ zuul_scheduler_resources }}
          securityContext:
            runAsUser: 10001
            runAsGroup: 10001
            privileged: true
          volumeMounts:
            - name: "cert-data"
              mountPath: "/tls"
            - name: "zuul-config"
              mountPath: "/etc/zuul"
              # Make ro after moving tenants away
              readOnly: true
            - name: "zuul-config-data"
              mountPath: "/etc/zuul-config"
              readOnly: true
            - name: "zuul-var-run"
              mountPath: "/var/run/zuul"
            - name: "zuul-scheduler-state-dir"
              mountPath: "/var/lib/zuul"
            - mountPath: "/var/run/secrets/tokens"
              name: "k8-tokens"
              readOnly: true

          image: "quay.io/opentelekomcloud/zuul-scheduler:{{ zuul.zuul_version_tag }}"

        - name: "vault-agent-sidecar"
          command:
            - "sh"
            - "-c"
            - "vault agent -config=/etc/vault/vault-agent-config-zuul-scheduler.hcl"
          env:
            - name: "VAULT_ADDR"
              value: "{{ ansible_hashi_vault_addr }}"
          image: "{{ zuul.vault_image }}"
          resources: {{ zuul_vault_agent_resources }}
          volumeMounts:
            - mountPath: "/etc/vault"
              name: "vault-agent-config"
            - mountPath: "/secrets"
              name: "secrets"

            - mountPath: "/var/run/secrets/tokens"
              name: "k8-tokens"
              readOnly: true

      volumes:
        - name: "vault-agent-config"
          configMap:
            name: "vault-agent-config-{{ instance }}"
        - name: "zuul-config-data"
          persistentVolumeClaim:
            claimName: "zuul-config-{{ instance }}"

        - name: "cert-data"
          emptyDir: {}
        - name: "zuul-var-run"
          emptyDir: {}
        - name: "zuul-config"
          emptyDir: {}
        - name: "secrets"
          emptyDir: {}
        - name: "k8-tokens"
          projected:
            defaultMode: 420
            sources:
            - serviceAccountToken:
                expirationSeconds: 7200
                path: "vault-token"
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: "app.kubernetes.io/instance"
                  operator: In
                  values:
                  - "{{ instance }}"
                - key: "app.kubernetes.io/app"
                  operator: In
                  values:
                  - "zuul"
                - key: "app.kubernetes.io/component"
                  operator: In
                  values:
                  - "zuul-scheduler"
              topologyKey: kubernetes.io/hostname

  volumeClaimTemplates:
    - metadata:
        name: "zuul-scheduler-state-dir"
      spec:
        accessModes:
          - "ReadWriteMany"
        storageClassName: "csi-nas"
        resources:
          requests:
            storage: "5G"
