apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/app: "zuul"
    app.kubernetes.io/component: "nodepool-builder"
    app.kubernetes.io/instance: "{{ instance }}"
    app.kubernetes.io/managed-by: "system-config"
spec:
  replicas: {{ zuul.nodepool_builder_instances_count | default(1) | int }}
  serviceName: "nodepool-builder"
  selector:
    matchLabels:
      app.kubernetes.io/app: "zuul"
      app.kubernetes.io/component: "nodepool-builder"
      app.kubernetes.io/instance: "{{ instance }}"
  template:
    metadata:
      labels:
        app.kubernetes.io/app: "zuul"
        app.kubernetes.io/component: "nodepool-builder"
        app.kubernetes.io/instance: "{{ instance }}"
      annotations:
        vaultConfVersion: "{{ zuul_vault_cm_version | default(omit) }}"
        zkClientCertValidity: "{{ zk_client_cert_info.not_after }}"
    spec:
      serviceAccountName: "{{ zuul_service_account_name }}"
      initContainers:
        - name: "vault-agent"
          command:
            - "sh"
            - "-c"
            - "vault agent -config=/etc/vault/vault-agent-config-nodepool-builder.hcl -exit-after-auth=true"
          env:
            - name: "VAULT_ADDR"
              value: "{{ ansible_hashi_vault_addr }}"
          image: "{{ zuul.vault_image }}"
          resources: {{ zuul_vault_agent_resources }}
          volumeMounts:
            - mountPath: "/etc/vault"
              name: "vault-agent-config"
            - mountPath: "/secrets"
              name: "secrets"

            - mountPath: "/var/run/secrets/tokens"
              name: "k8-tokens"
              readOnly: true

      containers:

        - name: "conf-priv-fixer"
          image: "busybox:1.34.1-musl"
          command:
            - "sh"
            - "-c"
            - "while :; do cp -v /secrets/tls/* /tls/; cp -uv /secrets/openstack/clouds.yaml /etc/openstack/clouds.yaml; chown -R 10001:10001 /etc/openstack /tls; sleep 60; done"
          resources: {{ zuul_vault_priv_fixer_resources }}
          volumeMounts:
            - name: "secrets"
              mountPath: "/secrets"
            - name: "cert-data"
              mountPath: "/tls"
            - name: "openstack-config"
              mountPath: "/etc/openstack"

        - name: "nodepool-builder"
          securityContext:
            runAsUser: 10001
            runAsGroup: 10001
          resources: {{ zuul_nodepool_builder_resources }}
          command:
            - "nodepool-builder"
            - "-d"
            - "-f"
            - "-c"
            - "/data/nodepool/nodepool.yaml"
          securityContext:
            privileged: true
          env:
            - name: "OS_CLIENT_CONFIG_FILE"
              value: "/etc/openstack/clouds.yaml"
          volumeMounts:
            - name: "cert-data"
              mountPath: "/tls"
              readOnly: true
            - name: "nodepool-config"
              mountPath: "/etc/nodepool/"
              readOnly: true
            - name: "nodepool-data-volume"
              mountPath: "/var/run/nodepool"
            - name: "openstack-config"
              mountPath: "/etc/openstack"
              readOnly: true
            - name: "dev"
              mountPath: "/dev"
            - name: "nodepool-images-dir"
              mountPath: "/opt/nodepool/images"
            # Podman need non-overlayfs
            - name: "nodepool-containers"
              mountPath: "/var/lib/containers"
            - name: "zuul-config-data"
              mountPath: "/data"
            - name: "dib-tmp"
              mountPath: "/opt/dib_tmp"
            - name: "dib-cache"
              mountPath: "/opt/dib_cache"
            - mountPath: "/var/run/secrets/tokens"
              name: "k8-tokens"
              readOnly: true

          image: "quay.io/opentelekomcloud/nodepool-builder:{{ zuul.nodepool_version_tag }}"

        - name: "vault-agent-sidecar"
          command:
            - "sh"
            - "-c"
            - "vault agent -config=/etc/vault/vault-agent-config-nodepool-builder.hcl"
          env:
            - name: "VAULT_ADDR"
              value: "{{ ansible_hashi_vault_addr }}"
          image: "{{ zuul.vault_image }}"
          resources: {{ zuul_vault_agent_resources }}
          volumeMounts:
            - mountPath: "/etc/vault"
              name: "vault-agent-config"
            - name: "secrets"
              mountPath: "/secrets"

            - mountPath: "/var/run/secrets/tokens"
              name: "k8-tokens"
              readOnly: true

      volumes:
        - name: "nodepool-config"
          configMap:
            name: "nodepool-config-{{ instance }}"
        - name: "cert-data"
          emptyDir: {}

        - name: "vault-agent-config"
          configMap:
            name: "vault-agent-config-{{ instance }}"

        - name: "zuul-config-data"
          persistentVolumeClaim:
            claimName: "zuul-config-{{ instance }}"
        - name: "openstack-config"
          emptyDir: {}
        - name: "nodepool-data-volume"
          emptyDir: {}
        - name: "nodepool-logs"
          emptyDir: {}
        - name: "nodepool-containers"
          emptyDir: {}
        - name: "zuul-config"
          emptyDir: {}
        - name: "secrets"
          emptyDir: {}
        - name: "dib-tmp"
          emptyDir: {}
        - name: "dib-cache"
          emptyDir: {}
        - name: "dev"
          hostPath:
            path: "/dev"
        - name: "k8-tokens"
          projected:
            defaultMode: 420
            sources:
            - serviceAccountToken:
                expirationSeconds: 7200
                path: "vault-token"

  volumeClaimTemplates:
    - metadata:
        name: "nodepool-images-dir"
      spec:
        accessModes:
          - "ReadWriteOnce"
        storageClassName: "csi-disk"
        resources:
          requests:
            storage: "80G"
