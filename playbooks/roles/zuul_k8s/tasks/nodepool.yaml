---
# We do not want to let service run with uncontrolled config
# Therefore we deploy manually knowing which config is valid
- name: Create Nodepool config
  community.kubernetes.k8s:
    context: "{{ context }}"
    state: "present"
    namespace: "{{ namespace }}"
    name: "nodepool-config-{{ instance }}"
    api_version: "v1"
    kind: "ConfigMap"
    apply: "yes"
    definition:
      metadata:
        labels:
          app.kubernetes.io/app: "zuul"
          app.kubernetes.io/instance: "{{ instance }}"
          app.kubernetes.io/managed-by: "system-config"
      data:
        nodepool.yaml: "{{ lookup('file', ([zuul_config_dir, instance, 'nodepool', 'nodepool.yaml'] | join('/')) ) }}"
  tags: ["config"]

- name: Create nodepool-launcher deployment
  community.kubernetes.k8s:
    context: "{{ context }}"
    state: "present"
    namespace: "{{ namespace }}"
    name: "nodepool-launcher-{{ instance }}"
    api_version: "v1"
    kind: "Deployment"
    definition:
      metadata:
        labels:
          app.kubernetes.io/app: "zuul"
          app.kubernetes.io/component: "nodepool-launcher"
          app.kubernetes.io/instance: "{{ instance }}"
          app.kubernetes.io/managed-by: "system-config"
      spec:
        replicas: "{{ zuul.nodepool_launcher_instances_count | default(1) }}"
        selector:
          matchLabels:
            app.kubernetes.io/app: "zuul"
            app.kubernetes.io/component: "nodepool-launcher"
            app.kubernetes.io/instance: "{{ instance }}"
        template:
          metadata:
            labels:
              app.kubernetes.io/app: "zuul"
              app.kubernetes.io/component: "nodepool-launcher"
              app.kubernetes.io/instance: "{{ instance }}"
            annotations:
              vaultConfVersion: "{{ zuul_vault_cm_version | default(omit) }}"
              zkClientCertValidity: "{{ zk_client_cert_info.not_after }}"
          spec:
            restartPolicy: "Always"
            terminationGracePeriodSeconds: 30
            serviceAccountName: "{{ zuul_service_account_name }}"
            initContainers:
              - name: "vault-agent"
                command:
                  - "sh"
                  - "-c"
                  - "vault agent -config=/etc/vault/vault-agent-config-nodepool.hcl -exit-after-auth=true && mkdir -p /etc/openstack && cp /secrets/openstack/clouds.yaml /etc/openstack"
                env:
                  - name: "VAULT_ADDR"
                    value: "{{ ansible_hashi_vault_addr }}"
                image: "{{ zuul.vault_image }}"
                volumeMounts:
                  - mountPath: "/etc/vault"
                    name: "vault-agent-config"
                  - mountPath: "/secrets"
                    name: "secrets"

                  - mountPath: "/var/run/secrets/tokens"
                    name: "k8-tokens"
                    readOnly: true

            containers:

              - name: "nodepool-launcher"
                resources:
                  limits:
                    cpu: 300m
                    memory: 500Mi
                  requests:
                    cpu: 100m
                    memory: 200Mi
                command:
                  - "nodepool-launcher"
                  - '-d'
                  - '-f'
                env:
                  - name: "STATSD_HOST"
                    value: "{{ zuul.statsd_host }}"
                volumeMounts:
                  - name: "cert-data"
                    mountPath: "/tls"
                    readOnly: true
                  - name: "nodepool-config"
                    readOnly: true
                    mountPath: "/etc/nodepool/"
                  - name: "nodepool-data-volume"
                    mountPath: "/var/lib/nodepool"
                  - name: "openstack-config"
                    mountPath: "/etc/openstack"
                    readOnly: true
                  - mountPath: "/var/run/secrets/tokens"
                    name: "k8-tokens"
                    readOnly: true

                image: "quay.io/opentelekomcloud/nodepool-launcher:{{ zuul.nodepool_version_tag }}"

              - name: "conf-priv-fixer"
                image: "busybox:1.34.1-musl"
                command:
                  - "sh"
                  - "-c"
                  - "while :; do cp -v /secrets/tls/* /tls/; cp -uv /secrets/openstack/clouds.yaml /etc/openstack/clouds.yaml; chown -R 0:0 /etc/openstack /tls; sleep 60; done"
                volumeMounts:
                  - name: "secrets"
                    mountPath: "/secrets"
                  - name: "cert-data"
                    mountPath: "/tls"
                  - name: "openstack-config"
                    mountPath: "/etc/openstack"

              - name: "vault-agent-sidecar"
                command:
                  - "sh"
                  - "-c"
                  - "vault agent -config=/etc/vault/vault-agent-config-nodepool.hcl"
                env:
                  - name: "VAULT_ADDR"
                    value: "{{ ansible_hashi_vault_addr }}"
                image: "{{ zuul.vault_image }}"
                volumeMounts:
                  - mountPath: "/etc/vault"
                    name: "vault-agent-config"
                  - mountPath: "/secrets"
                    name: "secrets"

                  - mountPath: "/var/run/secrets/tokens"
                    name: "k8-tokens"
                    readOnly: true

            volumes:
              - name: "nodepool-config"
                configMap:
                  name: "nodepool-config-{{ instance }}"
                  defaultMode: 420
              - name: "vault-agent-config"
                configMap:
                  name: "vault-agent-config-{{ instance }}"

              - name: "zuul-config-data"
                persistentVolumeClaim:
                  claimName: "zuul-config-{{ instance }}"

              - name: "nodepool-data-volume"
                emptyDir: {}
              - name: "cert-data"
                emptyDir: {}
              - name: "openstack-config"
                emptyDir: {}
              - name: "secrets"
                emptyDir: {}
              - name: "k8-tokens"
                projected:
                  defaultMode: 420
                  sources:
                  - serviceAccountToken:
                      expirationSeconds: 7200
                      path: "vault-token"
        strategy:
          type: RollingUpdate
          rollingUpdate:
            maxUnavailable: 25%
            maxSurge: 25%
        revisionHistoryLimit: 10
        progressDeadlineSeconds: 600

- name: Create nodepool-builder StatefulSet
  community.kubernetes.k8s:
    context: "{{ context }}"
    state: "present"
    namespace: "{{ namespace }}"
    name: "nodepool-builder-{{ instance }}"
    api_version: "v1"
    kind: "StatefulSet"
    apply: "yes"
    definition:
      metadata:
        labels:
          app.kubernetes.io/app: "zuul"
          app.kubernetes.io/component: "nodepool-builder"
          app.kubernetes.io/instance: "{{ instance }}"
          app.kubernetes.io/managed-by: "system-config"
      spec:
        replicas: "{{ zuul.nodepool_builder_instances_count | default(1) }}"
        serviceName: "nodepool-builder"
        selector:
          matchLabels:
            app.kubernetes.io/app: "zuul"
            app.kubernetes.io/component: "nodepool-builder"
            app.kubernetes.io/instance: "{{ instance }}"
        template:
          metadata:
            labels:
              app.kubernetes.io/app: "zuul"
              app.kubernetes.io/component: "nodepool-builder"
              app.kubernetes.io/instance: "{{ instance }}"
            annotations:
              vaultConfVersion: "{{ zuul_vault_cm_version | default(omit) }}"
              zkClientCertValidity: "{{ zk_client_cert_info.not_after }}"
          spec:
            serviceAccountName: "{{ zuul_service_account_name }}"
            initContainers:
              - name: "vault-agent"
                command:
                  - "sh"
                  - "-c"
                  - "vault agent -config=/etc/vault/vault-agent-config-nodepool.hcl -exit-after-auth=true && mkdir -p /etc/openstack && cp /secrets/openstack/clouds.yaml /etc/openstack"
                env:
                  - name: "VAULT_ADDR"
                    value: "{{ ansible_hashi_vault_addr }}"
                image: "{{ zuul.vault_image }}"
                volumeMounts:
                  - mountPath: "/etc/vault"
                    name: "vault-agent-config"
                  - mountPath: "/secrets"
                    name: "secrets"

                  - mountPath: "/var/run/secrets/tokens"
                    name: "k8-tokens"
                    readOnly: true

            containers:

              - name: "nodepool-builder"
                resources:
                  limits:
                    cpu: 2
                    memory: "2G"
                  requests:
                    cpu: "500m"
                    memory: "100Mi"
                command:
                  - "nodepool-builder"
                  - "-d"
                  - "-f"
                securityContext:
                  privileged: true
                env:
                  - name: "OS_CLIENT_CONFIG_FILE"
                    value: "/etc/openstack/clouds.yaml"
                volumeMounts:
                  - name: "cert-data"
                    mountPath: "/tls"
                    readOnly: true
                  - name: "nodepool-config"
                    mountPath: "/etc/nodepool/"
                    readOnly: true
                  - name: "nodepool-data-volume"
                    mountPath: "/var/run/nodepool"
                  - name: "openstack-config"
                    mountPath: "/etc/openstack"
                    readOnly: true
                  - name: "dev"
                    mountPath: "/dev"
                  - name: "nodepool-images-dir"
                    mountPath: "/opt/nodepool/images"
                  # Podman need non-overlayfs
                  - name: "nodepool-containers"
                    mountPath: "/var/lib/containers"
                  - name: "zuul-config-data"
                    mountPath: "/data"
                  - name: "dib-tmp"
                    mountPath: "/opt/dib_tmp"
                  - name: "dib-cache"
                    mountPath: "/opt/dib_cache"
                  - mountPath: "/var/run/secrets/tokens"
                    name: "k8-tokens"
                    readOnly: true

                image: "quay.io/opentelekomcloud/nodepool-builder:{{ zuul.nodepool_version_tag }}"

              - name: "conf-priv-fixer"
                image: "busybox:1.34.1-musl"
                command:
                  - "sh"
                  - "-c"
                  - "while :; do cp -v /secrets/tls/* /tls/; cp -uv /secrets/openstack/clouds.yaml /etc/openstack/clouds.yaml; chown -R 0:0 /etc/openstack /tls; sleep 60; done"
                volumeMounts:
                  - name: "secrets"
                    mountPath: "/secrets"
                  - name: "cert-data"
                    mountPath: "/tls"
                  - name: "openstack-config"
                    mountPath: "/etc/openstack"

              - name: "vault-agent-sidecar"
                command:
                  - "sh"
                  - "-c"
                  - "vault agent -config=/etc/vault/vault-agent-config-nodepool.hcl"
                env:
                  - name: "VAULT_ADDR"
                    value: "{{ ansible_hashi_vault_addr }}"
                image: "{{ zuul.vault_image }}"
                volumeMounts:
                  - mountPath: "/etc/vault"
                    name: "vault-agent-config"
                  - name: "secrets"
                    mountPath: "/secrets"

                  - mountPath: "/var/run/secrets/tokens"
                    name: "k8-tokens"
                    readOnly: true

            volumes:
              - name: "nodepool-config"
                configMap:
                  name: "nodepool-config-{{ instance }}"
              - name: "cert-data"
                emptyDir: {}

              - name: "vault-agent-config"
                configMap:
                  name: "vault-agent-config-{{ instance }}"

              - name: "zuul-config-data"
                persistentVolumeClaim:
                  claimName: "zuul-config-{{ instance }}"
              - name: "openstack-config"
                emptyDir: {}
              - name: "nodepool-data-volume"
                emptyDir: {}
              - name: "nodepool-logs"
                emptyDir: {}
              - name: "nodepool-containers"
                emptyDir: {}
              - name: "zuul-config"
                emptyDir: {}
              - name: "secrets"
                emptyDir: {}
              - name: "dib-tmp"
                emptyDir: {}
              - name: "dib-cache"
                emptyDir: {}
              - name: "dev"
                hostPath:
                  path: "/dev"
              - name: "k8-tokens"
                projected:
                  defaultMode: 420
                  sources:
                  - serviceAccountToken:
                      expirationSeconds: 7200
                      path: "vault-token"

        volumeClaimTemplates:
          - metadata:
              name: "nodepool-images-dir"
            spec:
              accessModes:
                - "ReadWriteOnce"
              storageClassName: "csi-disk"
              resources:
                requests:
                  storage: "80G"
