- name: Create Zuul Web SS
  community.kubernetes.k8s:
    context: "{{ context }}"
    state: "present"
    namespace: "{{ namespace }}"
    name: "zuul-web-{{ instance }}"
    api_version: "v1"
    kind: "Deployment"
    apply: "yes"
    definition:
      metadata:
        labels:
          app.kubernetes.io/app: "zuul"
          app.kubernetes.io/component: "zuul-web"
          app.kubernetes.io/instance: "{{ instance }}"
          app.kubernetes.io/managed-by: "system-config"
      spec:
        replicas: 2
        selector:
          matchLabels:
            app.kubernetes.io/app: "zuul"
            app.kubernetes.io/component: "zuul-web"
            app.kubernetes.io/instance: "{{ instance }}"
        template:
          metadata:
            labels:
              app.kubernetes.io/app: "zuul"
              app.kubernetes.io/component: "zuul-web"
              app.kubernetes.io/instance: "{{ instance }}"
            annotations:
              vaultConfVersion: "{{ zuul_vault_cm_version | default(omit) }}"
              zkClientCertValidity: "{{ zk_client_cert_info.not_after }}"
          spec:
            affinity:
              podAntiAffinity:
                preferredDuringSchedulingIgnoredDuringExecution:
                - weight: 100
                  podAffinityTerm:
                    labelSelector:
                      matchExpressions:
                        - key: "app.kubernetes.io/app"
                          operator: In
                          values:
                          - "zuul"
                        - key: "app.kubernetes.io/component"
                          operator: In
                          values:
                          - "zuul-web"
                        - key: "app.kubernetes.io/instance"
                          operator: In
                          values:
                          - "{{ instance }}"
                    topologyKey: kubernetes.io/hostname
            serviceAccountName: "{{ zuul_service_account_name }}"
            initContainers:
              - name: "vault-agent"
                command:
                  - "sh"
                  - "-c"
                  - "vault agent -config=/etc/vault/vault-agent-config-zuul-web.hcl -exit-after-auth=true && mkdir -p /etc/zuul && cp -ruvT /secrets/zuul /etc/zuul"
                env:
                  - name: "VAULT_ADDR"
                    value: "{{ ansible_hashi_vault_addr }}"
                image: "{{ zuul.vault_image }}"
                volumeMounts:
                  - mountPath: "/etc/vault"
                    name: "vault-agent-config"
                  - mountPath: "/secrets"
                    name: "secrets"

                  - mountPath: "/var/run/secrets/tokens"
                    name: "k8-tokens"
                    readOnly: true

            containers:
              - name: "zuul-web"
                image: "quay.io/opentelekomcloud/zuul-web:{{ zuul.zuul_version_tag }}"
                command:
                  - "/usr/local/bin/zuul-web"
                  - "-f"
                ports:
                  - containerPort: 9000
                    name: "zuul-web"
                    protocol: "TCP"
                  - containerPort: 9091
                    name: "zuul-prom"
                    protocol: "TCP"
                readinessProbe:
                  httpGet:
                    path: "/health/ready"
                    port: "zuul-prom"
                  failureThreshold: 30
                  periodSeconds: 10
                livenessProbe:
                  httpGet:
                    path: "/health/live"
                    port: "zuul-prom"
                  initialDelaySeconds: 120
                  failureThreshold: 10
                  periodSeconds: 5
                  timeoutSeconds: 5
                resources:
                  limits:
                    cpu: "50m"
                    memory: "200Mi"
                  requests:
                    cpu: "20m"
                    memory: "100Mi"
                volumeMounts:
                  - name: "cert-data"
                    mountPath: "/tls"
                    readOnly: true
                  - mountPath: "/etc/zuul"
                    name: "zuul-config"
                    # TODO: readonly is not possible while we mount underneath it
                    # other dirs
                    # readOnly: true

                  - mountPath: "/var/run/secrets/tokens"
                    name: "k8-tokens"
                    readOnly: true

              # Vault agent produces files as vault user. We need to ensure
              # those have correct ownership and privs, therefore permanently
              # try to copy/fix what vault produces
              - name: "conf-priv-fixer"
                image: "busybox:1.34.1-musl"
                command:
                  - "sh"
                  - "-c"
                  - "while :; do cp -v /secrets/tls/* /tls/; cp -ruvT /secrets/zuul /etc/zuul; chown -R 10001:10001 /etc/zuul /tls; sleep 60; done"
                volumeMounts:
                  - name: "cert-data"
                    mountPath: "/tls"
                  - name: "zuul-config"
                    mountPath: "/etc/zuul"
                  - name: "secrets"
                    mountPath: "/secrets"

              - name: "vault-agent-sidecar"
                command:
                  - "sh"
                  - "-c"
                  - "vault agent -config=/etc/vault/vault-agent-config-zuul-web.hcl"
                env:
                  - name: "VAULT_ADDR"
                    value: "{{ ansible_hashi_vault_addr }}"
                image: "{{ zuul.vault_image }}"
                volumeMounts:
                  - mountPath: "/etc/vault"
                    name: "vault-agent-config"
                  - mountPath: "/secrets"
                    name: "secrets"

                  - mountPath: "/var/run/secrets/tokens"
                    name: "k8-tokens"
                    readOnly: true

            volumes:
              - name: "config"
                configMap:
                  name: "zuul-config-{{ instance }}"
              - name: "vault-agent-config"
                configMap:
                  name: "vault-agent-config-{{ instance }}"
              - name: "cert-data"
                emptyDir: {}
              - name: "zuul-config"
                emptyDir: {}
              - name: "secrets"
                emptyDir: {}
              - name: "k8-tokens"
                projected:
                  defaultMode: 420
                  sources:
                  - serviceAccountToken:
                      expirationSeconds: 7200
                      path: "vault-token"

        strategy:
          type: "RollingUpdate"
          rollingUpdate:
            maxUnavailable: 25%
            maxSurge: 25%
        revisionHistoryLimit: 10
        progressDeadlineSeconds: 600

- name: Create Zuul Web Service
  community.kubernetes.k8s:
    context: "{{ context }}"
    state: "present"
    namespace: "{{ namespace }}"
    name: "zuul-web-{{ instance }}"
    api_version: "v1"
    kind: "Service"
    apply: "yes"
    definition:
      metadata:
        labels:
          app.kubernetes.io/app: "zuul"
          app.kubernetes.io/component: "zuul-web"
          app.kubernetes.io/instance: "{{ instance }}"
          app.kubernetes.io/managed-by: "system-config"
      spec:
        ports:
          - name: "web"
            protocol: "TCP"
            port: 80
            targetPort: "zuul-web"
        selector:
          app.kubernetes.io/app: "zuul"
          app.kubernetes.io/component: "zuul-web"
          app.kubernetes.io/instance: "{{ instance }}"
        type: "ClusterIP"

- name: Create Zuul Web Ingress
  community.kubernetes.k8s:
    context: "{{ context }}"
    state: "present"
    namespace: "{{ namespace }}"
    name: "zuul-web-{{ instance }}"
    api_version: "networking.k8s.io/v1beta1"
    kind: "Ingress"
    apply: "yes"
    definition:
      metadata:
        labels:
          app.kubernetes.io/app: "zuul"
          app.kubernetes.io/component: "zuul-web"
          app.kubernetes.io/instance: "{{ instance }}"
          app.kubernetes.io/managed-by: "system-config"
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-prod"
      spec:
        tls:
          - hosts:
              - "{{ zuul.web_domain }}"
            secretName: "zuul-ci-cert-main"
        rules:
          - host: "{{ zuul.web_domain }}"
            http:
              paths:
                - path: "/"
                  backend:
                    serviceName: "zuul-web-{{ instance }}"
                    servicePort: 80

- name: Create Zuul Web Autoscaler
  community.kubernetes.k8s:
    context: "{{ context }}"
    state: "present"
    namespace: "{{ namespace }}"
    name: "zuul-web-{{ instance }}"
    api_version: "autoscaling/v2beta2"
    kind: "HorizontalPodAutoscaler"
    apply: "yes"
    definition:
      spec:
        scaleTargetRef:
          kind: "Deployment"
          name: "zuul-web"
          apiVersion: "apps/v1"
        minReplicas: 1
        maxReplicas: 2
        metrics:
          - type: "Resource"
            resource:
              name: "cpu"
              target:
                type: "Utilization"
                averageUtilization: 70
