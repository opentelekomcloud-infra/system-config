- include_role:
    name: "x509_cert"
    tasks_from: cert.yaml
    apply:
      tags: ["config"]
  vars:
    x509_common_name: "{{ zj_cert_item }}"
  tags: ["config"]
  loop:
    - "zuul-{{ instance }}-zk-client"
    - "zuul-{{ instance }}-gearman-server"
    - "zuul-{{ instance }}-gearman-client"
  loop_control:
    loop_var: zj_cert_item

- name: Create zuul-config dir
  file:
    path: "{{ zuul_config_dir }}"
    state: directory
  tags: ["config"]

- name: Update from master
  #when: "{{ zuul.pipeline|default('') in ['periodic', 'periodic-hourly'] }}"
  delegate_to: bridge.eco.tsi-dev.otc-service.com
  ansible.builtin.git:
    repo: "{{ zuul.config_repo }}"
    dest: "{{ zuul_config_dir }}/{{ instance }}"
    force: yes
  tags: ["config"]

- name: Create Zull Namespace
  community.kubernetes.k8s:
    context: "{{ context }}"
    state: "present"
    name: "{{ namespace }}"
    api_version: "v1"
    kind: "Namespace"

- name: Create Zull SA binding
  community.kubernetes.k8s:
    context: "{{ context }}"
    state: "present"
    namespace: "{{ namespace }}"
    name: "{{ namespace }}-admin-binding"
    api_version: "rbac.authorization.k8s.io/v1"
    kind: "ClusterRoleBinding"
    definition:
      subjects:
        - kind: "ServiceAccount"
          name: "default"
          apiGroup: ""
          namespace: "{{ namespace }}"
      roleRef:
        kind: "ClusterRole"
        name: "cluster-admin"
        apiGroup: ""

- name: Create ZK Certs Secrets
  community.kubernetes.k8s:
    context: "{{ context }}"
    state: "present"
    namespace: "{{ namespace }}"
    name: "zuul-zk-certs-{{ instance }}"
    api_version: "v1"
    kind: "Secret"
    definition:
      metadata:
        labels:
          app.kubernetes.io/app: "zuul"
          app.kubernetes.io/instance: "{{ instance }}"
          app.kubernetes.io/managed-by: "system-config"
      data:
        cacert.pem: "{{ lookup('file', x509_certs[('zuul-' + instance + '-zk-client')]['ca']) | string | b64encode }}"
        cert.pem: "{{ lookup('file', x509_certs[('zuul-' + instance + '-zk-client')]['cert']) | string | b64encode }}"
        key.pem: "{{ lookup('file', x509_certs[('zuul-' + instance + '-zk-client')]['key']) | string | b64encode }}"
  tags: ["config"]

- include_tasks: statsd.yaml
  tags: ["config"]
- include_tasks: nodepool.yaml
  tags: ["config"]
- include_tasks: zuul.yaml
  tags: ["config"]
