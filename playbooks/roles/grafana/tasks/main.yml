---
- name: Include variables
  include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      files: "{{ distro_lookup_path }}"
      paths:
        - "vars"

- name: Install required packages
  become: true
  ansible.builtin.package:
    state: present
    name: "{{ item }}"
  loop:
    - "{{ packages }}"
  when: "ansible_facts.pkg_mgr != 'atomic_container'"
  register: task_result
  until: task_result is success
  retries: 5

- name: Create Grafana group
  become: true
  ansible.builtin.group:
    name: "{{ grafana_os_user }}"
    state: present

- name: Create Grafana user for docker
  become: true
  ansible.builtin.user:
    name: "{{ grafana_os_user }}"
    group: "{{ grafana_os_group }}"
    groups: docker 
    state: present
  when: container_command == "docker"

- name: Create alerta user for podman
  become: true
  ansible.builtin.user:
    name: "{{ grafana_os_user }}"
    group: "{{ grafana_os_group }}"
    state: present
  when: container_command == "podman"

- name: Create required directories
  become: true
  file:
    path: "{{ item.dest }}"
    state: directory
    recurse: yes
    owner: "{{ grafana_os_user }}"
    group: "{{ grafana_os_group }}"
    mode: "{{ item.mode | default(omit) }}"
  loop:
    - {dest: "/etc/grafana"}
    - {dest: "/etc/grafana/provisioning"}
    - {dest: "/etc/grafana/ldap"}
    - {dest: "/var/lib/grafana", mode: "0777"}

- name: Write Grafana config env file
  become: true
  template:
    src: "env.j2"
    dest: "/etc/grafana/env"
    owner: "{{ grafana_os_user }}"
    group: "{{ grafana_os_group }}"
    mode: 0664

- name: Write Grafana ldap conf file
  become: true
  template:
    src: "ldap.toml.j2"
    dest: "/etc/grafana/ldap/ldap.toml"
    owner: "{{ grafana_os_user }}"
    group: "{{ grafana_os_group }}"
    mode: 0664
  when: grafana_auth_ldap_enable

- name: Write Grafana ldap root CA file
  become: true
  template:
    src: "ldap-certificate.crt.j2"
    dest: "/etc/grafana/ldap/ldap-certificate.crt"
    owner: "{{ grafana_os_user }}"
    group: "{{ grafana_os_group }}"
    mode: 0664
  when: grafana_auth_ldap_enable

- include_tasks: firewall.yml

- name: Write Grafana Image Renderer Systemd unit file
  become: true
  template:
    src: "grafana-renderer.service.j2"
    dest: "/etc/systemd/system/grafana-renderer.service"
  when: grafana_enable_renderer
  notify:
    - restart grafana-renderer

- name: Write Grafana Systemd unit file
  become: true
  template:
    src: "grafana.service.j2"
    dest: "/etc/systemd/system/grafana.service"
  notify:
    - restart grafana

- name: Force all notified handlers to run at this point, not waiting for normal sync points
  meta: flush_handlers

- name: Make sure the Grafana service started
  become: true
  systemd:
    state: started
    name: "grafana.service"

- name: Install Grafana plugins with podman
  become: true
  become_user: "{{ grafana_os_user }}"
  command: "podman exec grafana grafana-cli plugins install {{ item }}"
  loop: "{{ grafana_plugins }}"
  when: container_command == "podman"
  notify:
    - restart grafana

- name: Install Grafana plugins with docker
  become: true
  become_user: "{{ grafana_os_user }}"
  command: "podman exec grafana grafana-cli plugins install {{ item }}"
  loop: "{{ grafana_plugins }}"
  when: container_command == "docker"
  notify:
    - restart grafana
