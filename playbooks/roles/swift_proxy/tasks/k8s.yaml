- name: Create swift-proxy Config
  community.kubernetes.k8s:
    context: "{{ context }}"
    state: "present"
    namespace: "{{ namespace }}"
    name: "{{ config_secret_name }}"
    api_version: "v1"
    kind: "Secret"
    apply: "yes"
    definition:
      metadata:
        labels:
          app.kubernetes.io/app: "swift-proxy"
          app.kubernetes.io/instance: "{{ instance }}"
          app.kubernetes.io/managed-by: "system-config"
      data:
        clouds.yaml: "{{ sp['clouds.yaml'] | to_yaml | b64encode }}"
  tags: ["config"]

- name: Create swift-proxy Service
  community.kubernetes.k8s:
    context: "{{ context }}"
    state: "{{ state }}"
    namespace: "{{ namespace }}"
    name: "{{ svc_name }}"
    kind: "Service"
    api_version: "v1"
    apply: "yes"
    definition:
      metadata:
        labels:
          app.kubernetes.io/name: "swift-proxy"
          app.kubernetes.io/instance: "{{ instance }}"
          app.kubernetes.io/managed-by: "system-config"
      spec:
        type: "NodePort"
        ports:
          - port: 8000
            nodePort: "{{ node_port }}"
            protocol: "TCP"
            targetPort: 8000
        selector:
          app.kubernetes.io/name: "swift-proxy"
          app.kubernetes.io/instance: "{{ instance }}"

- name: Create swift-proxy Deployment
  community.kubernetes.k8s:
    context: "{{ context }}"
    state: "{{ state }}"
    namespace: "{{ namespace }}"
    name: "{{ dpl_name }}"
    api_version: "apps/v1"
    kind: "Deployment"
    apply: "yes"
    definition:
      metadata:
        labels:
          app.kubernetes.io/name: "swift-proxy"
          app.kubernetes.io/instance: "{{ instance }}"
          app.kubernetes.io/managed-by: "system-config"
      spec:
        selector:
          matchLabels:
            app.kubernetes.io/name: "swift-proxy"
            app.kubernetes.io/instance: "{{ instance }}"
        serviceName: "{{ svc_name }}"
        template:
          metadata:
            labels:
              app.kubernetes.io/name: "swift-proxy"
              app.kubernetes.io/instance: "{{ instance }}"
          spec:
            containers:
              - resources: "{{ resources | default(omit) }}"
                name: "swift-proxy"
                env:
                  - name: "CLOUD_NAMES"
                    value: "{{ sp.cloud_names | default('logs') | join(',') }}"
                ports:
                  - name: "sp"
                    containerPort: 8000
                    protocol: "TCP"
                volumeMounts:
                  - name: "swift-proxy-config"
                    mountPath: "/etc/openstack"
                image: "{{ image }}"
            volumes:
              - name: "swift-proxy-config"
                secret:
                  secretName: "{{ config_secret_name }}"
                  defaultMode: 420

- name: Create swift-proxy Autoscaler
  community.kubernetes.k8s:
    context: "{{ context }}"
    state: "present"
    namespace: "{{ namespace }}"
    name: "{{ hpa_name }}"
    api_version: "autoscaling/v2beta2"
    kind: "HorizontalPodAutoscaler"
    apply: "yes"
    definition:
      spec:
        scaleTargetRef:
          kind: "Deployment"
          name: "{{ dpl_name }}"
          apiVersion: "apps/v1"
        minReplicas: 1
        maxReplicas: 4
        metrics:
          - type: "Resource"
            resource:
              name: "cpu"
              target:
                type: "Utilization"
                averageUtilization: 70
          - type: "Resource"
            resource:
              name: "memory"
              target:
                type: "Utilization"
                averageUtilization: 70
