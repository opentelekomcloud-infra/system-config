---
- name: "Check whether {{ org.key }} organization has listed repos exists"
  uri:
    headers:
      Authorization: "token {{ github_token }}"
    status_code:
      - 200
      - 404
    url: "{{ github_api }}/repos/{{ org.key }}/{{ repo.key }}"
  when: "'repositories' in org.value"
  loop_control:
    loop_var: repo
  with_dict: "{{ org.value.repositories }}"
  register: response

- name: Update exists repositories
  block:
    - name: Update repository base options
      when: resp.status == 200
      script: >
        github_api.py --endpoint options
        --org "{{ org.key }}" --repo "{{ resp.repo.key }}"
      args:
        executable: python3
      loop_control:
        loop_var: resp
      with_items: "{{ response.results }}"
      register: failed_options

    - name: Update repository collaborators
      when: resp.status == 200
      script: >
        github_api.py --endpoint manage_collaborators
        --org "{{ org.key }}" --repo "{{ resp.repo.key }}"
      args:
        executable: python3
      loop_control:
        loop_var: resp
      with_items: "{{ response.results }}"
      register: failed_users

    - name: Update branch protection rules for repo
      when: resp.status == 200
      script: >
        github_api.py --endpoint branch_protection
        --org "{{ org.key }}" --repo "{{ resp.repo.key }}"
      args:
        executable: python3
      loop_control:
        loop_var: resp
      with_items: "{{ response.results }}"
      register: failed_update
  when: "'results' in response"
