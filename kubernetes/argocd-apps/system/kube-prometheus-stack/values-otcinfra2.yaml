kube-prometheus-stack:
  alertmanager:
    alertmanagerSpec:
      externalUrl: https://alertamanager-mon.infra2.eco.tsi-dev.otc-service.com
    config:
      receivers:
      - name: "null"
      - name: matrix-webhook
        webhook_configs:
        - send_resolved: true
          url: <path:secret/data/prometheus/infra2#matrix_webhook_url>
      - name: slack-webhook
        slack_configs:
        - api_url: <path:secret/data/prometheus/infra2#slack_webhook_url>
          color: '{{ if eq .Status "firing" }}danger{{ else }}good{{ end }}'
          link_names: false
          send_resolved: true
          short_fields: false
          text: |
            {{ range .Alerts }}
              {{- if .Annotations.summary }}
              *Alert:* {{ .Annotations.summary }} - `{{ .Labels.severity }}`
              {{- end }}
              {{- if .Annotations.description }}
              *Description:* {{ .Annotations.description }}
              {{- end }}
              *Cluster:* {{ .Labels.cluster }}
            {{ end }}
          title: '[{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ len .Alerts.Firing
            }}{{ end }}] {{ .CommonLabels.alertname }}'
      route:
        routes:
        - continue: false
          matchers:
          - alertname =~ "InfoInhibitor|Watchdog"
          receiver: "null"
        - continue: true
          matchers:
          - severity =~ "critical|warning"
          receiver: matrix-webhook
        - receiver: slack-webhook
    ingress:
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
        nginx.ingress.kubernetes.io/auth-realm: Authentication Required
        nginx.ingress.kubernetes.io/auth-secret: basic-auth
        nginx.ingress.kubernetes.io/auth-type: basic
      enabled: true
      hosts:
      - alertamanager-mon.infra2.eco.tsi-dev.otc-service.com
      ingressClassName: nginx
      paths:
      - /
      tls:
      - hosts:
        - alertamanager-mon.infra2.eco.tsi-dev.otc-service.com
        secretName: alertmanager-mon
  coreDns:
    enabled: false
  defaultRules:
    rules:
      etcd: false
      kubeControllerManager: false
      kubeProxy: false
      kubeScheduler: false
  kubeControllerManager:
    enabled: false
  kubeEtcd:
    enabled: false
  kubeProxy:
    enabled: false
  kubeScheduler:
    enabled: false
  prometheus:
    extraSecret:
      data:
        auth: <path:secret/data/prometheus/infra2#basic_auth>
        vmauth_username: <path:secret/data/prometheus/infra2#vmauth_username>
        vmauth_password: <path:secret/data/prometheus/infra2#vmauth_password>
      name: basic-auth
    ingress:
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
        nginx.ingress.kubernetes.io/auth-realm: Authentication Required
        nginx.ingress.kubernetes.io/auth-secret: basic-auth
        nginx.ingress.kubernetes.io/auth-type: basic
      enabled: true
      hosts:
      - prometheus-mon.infra2.eco.tsi-dev.otc-service.com
      ingressClassName: nginx
      paths:
      - /
      tls:
      - hosts:
        - prometheus-mon.infra2.eco.tsi-dev.otc-service.com
        secretName: prometheus-mon
    prometheusSpec:
      externalLabels:
        cluster: otcinfra2
      externalUrl: https://prometheus-mon.infra2.eco.tsi-dev.otc-service.com
      retention: 7d
      remoteWrite:
        - url: "https://vm.eco.tsi-dev.otc-service.com/api/v1/write"
          queueConfig:
              maxSamplesPerSend: 10000
              capacity: 20000
              maxShards: 30
          basicAuth:
            username:
              name: basic-auth
              key: vmauth_username
            password:
              name: basic-auth
              key: vmauth_password
      serviceMonitorSelector: {}
      serviceMonitorSelectorNilUsesHelmValues: false

goNeb:
  enabled: true
  userId: <path:secret/data/prometheus/infra2#go_neb_user_id>
  accessToken: <path:secret/data/prometheus/infra2#matrix_bot_access_token>
  homeserverURL: "https://matrix.org"
  displayName: "OpenTelekomCloud Bot"
  roomId: <path:secret/data/prometheus/infra2#go_neb_room_id>
  image: "quay.io/opentelekomcloud/go-neb:master-2022-04-13"
