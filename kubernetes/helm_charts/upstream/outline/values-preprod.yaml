---
# Production-ready Outline Wiki Configuration
# Successfully tested and working with community-charts

outline:
  # Secrets - will be overridden by ArgoCD parameters
  secretKey: ""
  utilsSecret: ""
  url: ""  # Will be auto-generated from ingress

  # Keycloak OIDC Authentication - will be overridden by ArgoCD parameters
  auth:
    keycloak:
      enabled: true
      clientId: ""
      clientSecret: ""
      baseUrl: ""
      realmName: ""
      displayName: "Keycloak SSO"
      usernameClaim: "preferred_username"
      scopes:
        - openid
        - profile
        - email

  # Use external PostgreSQL (our managed instance)
  postgresql:
    enabled: false

  externalPostgresql:
    host: ""
    username: ""
    password: ""
    database: ""
    port: ""

  externalRedis:
    host: "outline-redis-master"
    port: 6379
    password: ""  # Overridden by ArgoCD if needed

  # Service configuration
  service:
    enabled: true
    type: ClusterIP
    port: 3000

  # Ingress with TLS
  ingress:
    enabled: true
    className: "nginx"
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      nginx.ingress.kubernetes.io/proxy-body-size: "50m"
      nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    hosts:
      - host: docs.eco-preprod.tsi-dev.otc-service.com
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls:
      - secretName: outline-tls
        hosts:
          - docs.eco-preprod.tsi-dev.otc-service.com

  # Resource limits
  resources:
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 500m
      memory: 512Mi

  # Security contexts
  podSecurityContext:
    fsGroup: 1001
    runAsNonRoot: true

  securityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL
    readOnlyRootFilesystem: false
    runAsNonRoot: true
    runAsUser: 1001
    runAsGroup: 1001

  # File storage configuration
  fileStorage:
    mode: local
    local:
      persistence:
        enabled: true
        size: 50Gi
        storageClass: "gp3"

# PostgreSQL configuration (managed instance)
# postgresql:
#   enabled: false
#   auth:
#     postgresPassword: "{{ vault_postgresql_admin_password }}"
#     username: "outline"
#     password: "{{ vault_outline_postgresql_password }}"
#     database: "outline"
#   primary:
#     persistence:
#       enabled: true
#       size: 20Gi
#       storageClass: "gp3"
#     resources:
#       limits:
#         cpu: 1000m
#         memory: 2Gi
#       requests:
#         cpu: 500m
#         memory: 1Gi
#     securityContext:
#       enabled: true
#       fsGroup: 1001
#       runAsUser: 1001

# Redis configuration (managed instance)
redis:
  enabled: true
  auth:
    enabled: false  # Can be enabled later with password
  master:
    persistence:
      enabled: true
      size: 8Gi
      storageClass: "gp3"
    resources:
      limits:
        cpu: 500m
        memory: 512Mi
      requests:
        cpu: 250m
        memory: 256Mi
  replica:
    replicaCount: 1
    persistence:
      enabled: true
      size: 8Gi
      storageClass: "gp3"
