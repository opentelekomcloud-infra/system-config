{{- if .Values.clusters }}
{{- range $clusterName, $cluster := .Values.clusters }}
---
apiVersion: v1
kind: Secret
metadata:
  name: argocd-cluster-{{ $clusterName }}
  namespace: {{ $.Release.Namespace }}
  labels:
    argocd.argoproj.io/secret-type: cluster
    app.kubernetes.io/part-of: argocd
    app.kubernetes.io/component: cluster-secret
type: Opaque
stringData:
  name: {{ $clusterName }}
  server: {{ $cluster.server }}
  config: |-
    {
      "tlsClientConfig": {
        {{- $tlsConfig := list -}}
        {{- if $cluster.config.tlsClientConfig.insecure -}}
          {{- $tlsConfig = append $tlsConfig (printf '\"insecure\": true' ) -}}
        {{- end -}}
        {{- if $cluster.config.tlsClientConfig.certData -}}
          {{- $tlsConfig = append $tlsConfig (printf '\"certData\": "<path:secret/data/argocd/clusters/%s#certData>"' $clusterName) -}}
        {{- end -}}
        {{- if $cluster.config.tlsClientConfig.keyData -}}
          {{- $tlsConfig = append $tlsConfig (printf '\"keyData\": "<path:secret/data/argocd/clusters/%s#keyData>"' $clusterName) -}}
        {{- end -}}
        {{- if $cluster.config.tlsClientConfig.caData -}}
          {{- $tlsConfig = append $tlsConfig (printf '\"caData\": "<path:secret/data/argocd/clusters/%s#caData>"' $clusterName) -}}
        {{- end -}}
        {{- if $cluster.config.tlsClientConfig.serverName -}}
          {{- $tlsConfig = append $tlsConfig (printf '\"serverName\": "<path:secret/data/argocd/clusters/%s#serverName>"' $clusterName) -}}
        {{- end -}}
        {{- if $tlsConfig -}}
          {{ join "," $tlsConfig }}
        {{- end }}
      }
      {{- if $cluster.config.bearerToken }}, "bearerToken": "<path:secret/data/argocd/clusters/{{ $clusterName }}#bearerToken>"{{- end }}{{- if $cluster.config.username }}, "username": "<path:secret/data/argocd/clusters/{{ $clusterName }}#username>"{{- end }}{{- if $cluster.config.password }}, "password": "<path:secret/data/argocd/clusters/{{ $clusterName }}#password>"{{- end }}{{- if $cluster.config.awsAuthConfig }}, "awsAuthConfig": {"clusterName": "<path:secret/data/argocd/clusters/{{ $clusterName }}#awsClusterName>", "roleARN": "<path:secret/data/argocd/clusters/{{ $clusterName }}#awsRoleARN>"}{{- end }}
    }
{{- end }}
{{- end }}
