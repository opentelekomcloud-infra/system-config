{{- range .Values.applicationSets }}
{{- $appSet := . }}
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: {{ .name }}
  namespace: {{ default "argocd" $.Values.namespace }}
spec:
  generators:
    - matrix:
        generators:
          - list:
              elements:
                {{- range .applications }}
                {{- $app := . }}
                - name: {{ $app.name | quote }}
                  namespace: {{ $app.namespace | default "default" | quote }}
                  repoURL: {{ $app.repoURL | quote }}
                  targetRevision: {{ $app.targetRevision | default "main" | quote }}
                  path: {{ $app.path | quote }}
                  project: {{ $app.project | default $appSet.project | default "infra" | quote }}
                  pluginName: {{ $app.pluginName | default "argocd-vault-plugin-helm" | quote }}
                  pluginEnv: {{ $app.pluginEnv | default "" | quote }}
                  {{- if $app.syncPolicy }}
                  syncPolicy: {{ $app.syncPolicy | toJson | quote }}
                  {{- end }}
                {{- end }}
          - list:
              elements:
                {{- $clusters := list }}
                {{- range .applications }}
                  {{- if .clusters }}
                    {{- $clusters = .clusters }}
                    {{- break }}
                  {{- end }}
                {{- end }}
                {{- if not $clusters }}
                  {{- $clusters = list "in-cluster" }}
                {{- end }}
                {{- range $clusters }}
                - cluster: {{ . | quote }}
                {{- end }}
  template:
    metadata:
      name: '{{ "{{name}}" }}-{{ "{{cluster}}" }}'
    spec:
      project: '{{ "{{project}}" }}'
      source:
        repoURL: '{{ "{{repoURL}}" }}'
        targetRevision: '{{ "{{targetRevision}}" }}'
        path: '{{ "{{path}}" }}'
        plugin:
          name: '{{ "{{pluginName}}" }}'
          env:
            - name: ARGOCD_ENV_HELM_ARGS
              value: '{{ "{{pluginEnv}}" }}'
      destination:
        name: '{{ "{{cluster}}" }}'
        namespace: '{{ "{{namespace}}" }}'
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        syncOptions:
          - CreateNamespace=true
---
{{- end }}
