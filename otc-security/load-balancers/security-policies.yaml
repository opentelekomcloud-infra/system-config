# Security Policies for OTC Load Balancers
# Advanced security configurations and policies

# WAF (Web Application Firewall) Rules
waf_rules:
  # OWASP Core Rule Set
  owasp_crs:
    enable: true
    paranoia_level: 2
    rules:
      # SQL Injection Protection
      - rule_id: "942100"
        description: "SQL Injection Attack Detected via libinjection"
        action: "block"
        severity: "critical"

      - rule_id: "942110"
        description: "SQL Injection Attack: Common Injection Testing Detected"
        action: "block"
        severity: "critical"

      # XSS Protection
      - rule_id: "941100"
        description: "XSS Attack Detected via libinjection"
        action: "block"
        severity: "high"

      - rule_id: "941110"
        description: "XSS Filter - Category 1: Script Tag Vector"
        action: "block"
        severity: "high"

      # Command Injection Protection
      - rule_id: "932100"
        description: "Remote Command Execution: Unix Command Injection"
        action: "block"
        severity: "critical"

      # Path Traversal Protection
      - rule_id: "930100"
        description: "Path Traversal Attack (/../)"
        action: "block"
        severity: "high"

  # Custom Security Rules
  custom_rules:
    # Block common attack patterns
    - name: "block_admin_access"
      pattern: "/admin|/administrator|/wp-admin"
      action: "block"
      description: "Block access to admin interfaces"

    - name: "block_config_files"
      pattern: "\\.env|\\.config|\\.ini|\\.conf$"
      action: "block"
      description: "Block access to configuration files"

    - name: "block_backup_files"
      pattern: "\\.bak|\\.backup|\\.old|\\.tmp$"
      action: "block"
      description: "Block access to backup files"

    # Rate limiting rules
    - name: "api_rate_limit"
      pattern: "/api/"
      rate_limit: "100/minute"
      action: "rate_limit"
      description: "Rate limit API endpoints"

    - name: "login_rate_limit"
      pattern: "/login|/auth|/signin"
      rate_limit: "5/minute"
      action: "rate_limit"
      description: "Rate limit authentication endpoints"

# DDoS Protection Policies
ddos_protection:
  # Connection limits
  connection_limits:
    max_connections_per_ip: 100
    max_connections_global: 10000
    connection_timeout: 30

  # Rate limiting
  rate_limits:
    requests_per_second: 100
    burst_capacity: 500
    sliding_window: 60  # seconds

  # Traffic shaping
  traffic_shaping:
    enable: true
    priority_queues:
      - queue: "high"
        traffic_types: ["HTTPS", "API"]
        bandwidth_limit: "80%"
      - queue: "medium"
        traffic_types: ["HTTP"]
        bandwidth_limit: "15%"
      - queue: "low"
        traffic_types: ["OTHER"]
        bandwidth_limit: "5%"

  # Anomaly detection
  anomaly_detection:
    enable: true
    baseline_learning_period: 86400  # 24 hours
    deviation_threshold: 200  # percent
    alert_threshold: 150  # percent

# Geographic Access Control
geo_access_control:
  # Country-based blocking
  country_blocking:
    mode: "blacklist"  # or "whitelist"
    blocked_countries:
      - code: "CN"
        name: "China"
        reason: "High volume of malicious traffic"
      - code: "RU"
        name: "Russia"
        reason: "Geopolitical restrictions"
      - code: "KP"
        name: "North Korea"
        reason: "Sanctions compliance"
      - code: "IR"
        name: "Iran"
        reason: "Sanctions compliance"

  # ASN-based blocking
  asn_blocking:
    - asn: "AS4134"
      name: "China Telecom"
      reason: "High spam/abuse reports"
    - asn: "AS4837"
      name: "China Unicom"
      reason: "Bot traffic source"
    - asn: "AS12389"
      name: "Rostelecom"
      reason: "Malicious activity reports"

  # City/Region-based blocking
  region_blocking:
    - country: "CN"
      regions: ["Beijing", "Shanghai", "Shenzhen"]
      reason: "Concentrated attack sources"

# SSL/TLS Security Policies
ssl_tls_policies:
  # Protocol versions
  protocols:
    - "TLSv1.2"
    - "TLSv1.3"

  # Forbidden protocols
  forbidden_protocols:
    - "SSLv2"
    - "SSLv3"
    - "TLSv1.0"
    - "TLSv1.1"

  # Cipher suites (ordered by preference)
  cipher_suites:
    - "TLS_AES_256_GCM_SHA384"
    - "TLS_CHACHA20_POLY1305_SHA256"
    - "TLS_AES_128_GCM_SHA256"
    - "ECDHE-RSA-AES256-GCM-SHA384"
    - "ECDHE-RSA-AES128-GCM-SHA256"
    - "ECDHE-RSA-AES256-SHA384"
    - "ECDHE-RSA-AES128-SHA256"

  # Certificate policies
  certificate_policies:
    key_size_minimum: 2048
    signature_algorithm: "SHA256"
    certificate_transparency: true
    ocsp_stapling: true

  # HSTS configuration
  hsts:
    max_age: 31536000  # 1 year
    include_subdomains: true
    preload: true

# Access Control Lists (ACLs)
access_control_lists:
  # Whitelist for trusted IPs
  trusted_ips:
    - ip: "192.168.0.0/16"
      description: "Internal network"
      access_level: "full"
    - ip: "10.0.0.0/8"
      description: "Private network"
      access_level: "full"
    - ip: "172.16.0.0/12"
      description: "Docker networks"
      access_level: "limited"

  # Blacklist for known malicious IPs
  blocked_ips:
    - ip: "0.0.0.0/32"
      description: "Placeholder for threat intel IPs"
      reason: "Threat intelligence feed"
      expires: "24h"

  # Service-specific ACLs
  service_acls:
    swift:
      allowed_methods: ["GET", "PUT", "POST", "DELETE", "HEAD"]
      blocked_paths: ["/admin", "/.well-known"]
      rate_limit: "1000/hour"

    eco_infra:
      allowed_methods: ["GET", "POST"]
      blocked_paths: ["/debug", "/metrics"]
      rate_limit: "500/hour"

    zuul:
      allowed_methods: ["GET", "POST", "PUT"]
      blocked_paths: ["/admin", "/config"]
      rate_limit: "200/hour"
      require_auth: true

# Bot Protection
bot_protection:
  # User-Agent filtering
  user_agent_rules:
    # Block known bad bots
    blocked_patterns:
      - "(?i).*bot.*"
      - "(?i).*crawler.*"
      - "(?i).*spider.*"
      - "(?i).*scraper.*"
      - "curl|wget|python-requests"

    # Allow known good bots
    allowed_patterns:
      - "Googlebot"
      - "Bingbot"
      - "Slurp"
      - "DuckDuckBot"
      - "facebookexternalhit"

  # Challenge mechanisms
  challenges:
    javascript_challenge:
      enable: true
      timeout: 5
      complexity: "medium"

    captcha_challenge:
      enable: true
      provider: "hcaptcha"
      difficulty: "easy"

  # Behavioral analysis
  behavioral_analysis:
    enable: true
    suspicious_patterns:
      - rapid_requests: ">100/minute"
      - unusual_paths: "access to /wp-admin without referrer"
      - header_anomalies: "missing common headers"

# Logging and Monitoring Configuration
security_logging:
  # Log levels
  log_level: "INFO"

  # Log destinations
  destinations:
    - type: "syslog"
      server: "192.168.1.100"
      port: 514
      protocol: "UDP"

    - type: "elasticsearch"
      cluster: "security-logs"
      index: "otc-lb-security"

  # Log formats
  formats:
    access_log: "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-agent}i\" %D"
    security_log: "%t [%l] %h %r %s %b %D \"%{User-agent}i\" \"%{X-Forwarded-For}i\""

  # Log retention
  retention:
    access_logs: "30d"
    security_logs: "90d"
    error_logs: "7d"

# Alerting Rules
alerting_rules:
  # Critical alerts
  critical:
    - name: "DDoS_Attack_Detected"
      condition: "requests_per_second > 1000"
      duration: "1m"
      action: "immediate_block"

    - name: "Multiple_Failed_Auth"
      condition: "failed_auth_attempts > 10 in 5m"
      duration: "0s"
      action: "ip_block_1h"

  # Warning alerts
  warning:
    - name: "High_Traffic_Volume"
      condition: "requests_per_minute > 500"
      duration: "5m"
      action: "rate_limit"

    - name: "Suspicious_User_Agent"
      condition: "blocked_bot_requests > 50 in 10m"
      duration: "0s"
      action: "monitor"
